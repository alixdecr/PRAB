{
    "openapi": "3.0.1",
    "info": {
      "title": "Species API",
      "description": "This API works against data kept in the GBIF Checklist Bank which taxonomically indexes all registered [checklist datasets](https://www.gbif.org/dataset/search?type=CHECKLIST) in the GBIF network.\n\nInternally we use a [Java web service client](https://github.com/gbif/checklistbank/tree/master/checklistbank-ws-client) for the consumption of these HTTP-based, RESTful JSON web services.",
      "termsOfService": "https://www.gbif.org/terms",
      "version": "v1"
    },
    "servers": [
      {
        "url": "https://api.gbif.org/v1/",
        "description": "Production",
        "variables": {}
      },
      {
        "url": "https://api.gbif-uat.org/v1/",
        "description": "User testing",
        "variables": {}
      }
    ],
    "tags": [
      {
        "name": "Species",
        "description": "### Working with Name Usages.\n\nA name usage is the usage of a scientific name according to one particular checklist including the [GBIF Taxonomic Backbone](https://www.gbif.org/dataset/d7dddbf4-2cf0-4f39-9b2a-bb099caae36c) which is called “NUB” in this API.\n\nBackbone name usages have `key == nubKey`.  Name usages from other checklists with names that also exist in the backbone will have a `taxonKey` that points to the related usage in the backbone.",
        "x-Order": {
          "Order": "0100"
        }
      },
      {
        "name": "Searching names",
        "description": "GBIF provide four different ways of finding name usages. They differ in their matching behavior, response format and also the actual content covered.",
        "x-Order": {
          "Order": "0200"
        }
      },
      {
        "name": "Name parser",
        "description": "GBIF exposes its java based name parser library through our API. The service takes one or a list of simple scientific name strings, parses each and returns a list of parsed names.",
        "x-Order": {
          "Order": "0300"
        }
      }
    ],
    "paths": {
      "/parser/name": {
        "get": {
          "tags": [
            "Name parser"
          ],
          "summary": "Parse a scientific name",
          "description": "Parses a scientific name string and returns the ParsedName version of it.\n\nAccepts multiple parameters each with a single name. Make sure you URL encode the names properly.",
          "operationId": "parseName",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "description": "A scientific name to parse. Repeat to parse several names",
              "required": false,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Parsed name usages",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ParsedName"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ParsedName"
                    }
                  }
                }
              }
            }
          }
        },
        "post": {
          "tags": [
            "Name parser"
          ],
          "summary": "Parse a list of scientific names",
          "description": "Parses a list of scientific names supplied as a JSON list, a form request or a plain text file with Unix (\\n) line endings.  In all cases the names should use UTF-8 encoding.\n\n```\ncurl -X POST -H 'Content-Type: application/json' --data-binary @scientific_names.json https://api.gbif.org/v1/species/parser/name\ncurl -F names=@scientific_names.txt https://api.gbif.org/v1/species/parser/name\ncurl -X POST -H 'Content-Type: text/plain' --data-binary @scientific_names.txt https://api.gbif.org/v1/species/parser/name\n```\n",
          "operationId": "parseName_1",
          "requestBody": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "description": "Scientific names to parse, one per line, with Unix (\\n) newlines."
                }
              },
              "multipart/form-data": {
                "schema": {
                  "required": [
                    "names"
                  ],
                  "type": "object",
                  "properties": {
                    "names": {
                      "type": "string",
                      "description": "Scientific names to parse, one per line, with Unix (\\n) newlines.",
                      "format": "binary"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "A list of names to parse, such as `[\"First name\", \"Second name\"]`.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Parsed name usages",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ParsedName"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ParsedName"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/species/{usageKey}/vernacularNames": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage vernacular names by id",
          "description": "Retrieves all vernacular names for a name usage.",
          "operationId": "getNameUsageVernacularNames",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage vernacular names found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseVernacularName"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseVernacularName"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/verbatim": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Verbatim name usage by id",
          "description": "Retrieves a verbatim name usage.\n\nThe response object has JSON properties for each verbatim term property.",
          "operationId": "getNameUsageVerbatim",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            }
          ],
          "responses": {
            "200": {
              "description": "Verbatim name usage found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/VerbatimNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/VerbatimNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/typeSpecimens": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage type specimens by id",
          "description": "Retrieves partial type specimen information for a name usage.\n\nThe current Checklistbank only includes this information for some genus and family names, see [limitations](https://github.com/gbif/portal-feedback/issues/1146#issuecomment-366260607)",
          "operationId": "getNameUsageTypeSpecimens",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage type specimens found.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseTypeSpecimen"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseTypeSpecimen"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          },
          "deprecated": true
        }
      },
      "/species/{usageKey}/toc": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage descriptions table of contents",
          "description": "Retrieves a table of contents for all descriptions of a name usage.",
          "operationId": "getNameUsageDescriptionsTableOfContents",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage description table of contents.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TableOfContents"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/TableOfContents"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/synonyms": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage synonyms by id",
          "description": "Retrieves all synonyms for a name usage.",
          "operationId": "getNameUsageSynonyms",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage synonyms found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/speciesProfiles": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage species profiles by id",
          "description": "Retrieves all species profiles for a name usage.\n\nSpecies profiles describe basic species characteristics.",
          "externalDocs": {
            "description": "Species profile extension definition",
            "url": "https://rs.gbif.org/terms/1.0/SpeciesProfile"
          },
          "operationId": "getNameUsageSpeciesProfiles",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage species profiles found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseSpeciesProfile"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseSpeciesProfile"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/related": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Related name usages by id",
          "description": "Retrieves all related name usages for a name usage.",
          "operationId": "getNameUsageRelated",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "datasetKey",
              "in": "query",
              "required": false,
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "default": []
              }
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Related name usages found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/references": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage references by id",
          "description": "Retrieves all references for a name usage.",
          "operationId": "getNameUsageReferences",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage references found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseReference"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseReference"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/parents": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Parent name usages by id",
          "description": "Retrieves all parent name usages for a name usage.",
          "operationId": "getNameUsageParents",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            }
          ],
          "responses": {
            "200": {
              "description": "Parent name usages found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsage"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsage"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/name": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Parsed name usage by id",
          "description": "Retrieves the parsed name for a single name usage.",
          "operationId": "getNameUsageNameParsed",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            }
          ],
          "responses": {
            "200": {
              "description": "Parsed name usage found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ParsedName"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/ParsedName"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/metrics": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage metrics by id",
          "description": "Retrieves metrics for a single name usage.",
          "operationId": "getNameUsageMetrics",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage metrics found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsageMetrics"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsageMetrics"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/media": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage media by id",
          "description": "Retrieves all media for a name usage.",
          "operationId": "getNameUsageMedia",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage media found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsageMediaObject"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsageMediaObject"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/iucnRedListCategory": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "IUCN Red List Category for a name usage",
          "description": "Retrieves the IUCN Red List Category for a name usage.  If the matching IUCN usage does not contain a category, Not Evaluated (NE) is returned.",
          "operationId": "getNameUsageIucnRedListCategory",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            }
          ],
          "responses": {
            "200": {
              "description": "IUCN Red List category",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/IucnRedListCategory"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/IucnRedListCategory"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/identifier": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage identifiers by id",
          "description": "Retrieves all identifiers for a name usage.",
          "operationId": "getNameUsageIdentifiers",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage identifiers found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseIdentifier"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseIdentifier"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/distributions": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage distributions by id",
          "description": "Retrieves all distributions for a name usage.",
          "operationId": "getNameUsageDistributions",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage distributions found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseDistribution"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseDistribution"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/descriptions": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage descriptions by id",
          "description": "Retrieves all descriptions for a name usage.",
          "operationId": "getNameUsageDescriptions",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage descriptions found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseDescription"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseDescription"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/combinations": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage recombinations by id",
          "description": "Lists all (re)combinations of a given basionym, excluding the basionym itself.",
          "operationId": "getNameUsageRecombinations",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage recombinations found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsage"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsage"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/childrenAll": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "All name usage children by id",
          "description": "Retrieves a brief list of all child Name Usages for a parent Name Usage.",
          "operationId": "getNameUsageChildrenAll",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage children found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UsageCount"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/UsageCount"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}/children": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage children by id",
          "description": "Retrieves a list of child Name Usages for a parent Name Usage.",
          "operationId": "getNameUsageChildren",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage children found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species/{usageKey}": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Name usage by id",
          "description": "Retrieves a single name usage.",
          "operationId": "getNameUsage",
          "parameters": [
            {
              "name": "usageKey",
              "in": "path",
              "description": "Name usage key.",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              },
              "example": 5231190
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          },
          "x-Order": {
            "Order": "0200"
          }
        }
      },
      "/species/suggest": {
        "get": {
          "tags": [
            "Searching names"
          ],
          "summary": "Name autocomplete service",
          "description": "A quick and simple autocomplete service that returns up to 20 name usages by doing prefix matching against the scientific name.\n\nResults are ordered by relevance.",
          "operationId": "suggestNames",
          "parameters": [
            {
              "name": "datasetKey",
              "in": "query",
              "description": "A UUID of a checklist dataset.",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "d7dddbf4-2cf0-4f39-9b2a-bb099caae36c"
            },
            {
              "name": "constituentKey",
              "in": "query",
              "description": "The (sub)dataset constituent key as a UUID. Useful to query larger assembled datasets such as the GBIF Backbone or the Catalogue of Life",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "rank",
              "in": "query",
              "description": "Filters by taxonomic rank as given in our https://api.gbif.org/v1/enumeration/basic/Rank[Rank enum].",
              "schema": {
                "type": "string",
                "externalDocs": {
                  "description": "Darwin Core definition",
                  "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
                },
                "enum": [
                  "DOMAIN",
                  "SUPERKINGDOM",
                  "KINGDOM",
                  "SUBKINGDOM",
                  "INFRAKINGDOM",
                  "SUPERPHYLUM",
                  "PHYLUM",
                  "SUBPHYLUM",
                  "INFRAPHYLUM",
                  "SUPERCLASS",
                  "CLASS",
                  "SUBCLASS",
                  "INFRACLASS",
                  "PARVCLASS",
                  "SUPERLEGION",
                  "LEGION",
                  "SUBLEGION",
                  "INFRALEGION",
                  "SUPERCOHORT",
                  "COHORT",
                  "SUBCOHORT",
                  "INFRACOHORT",
                  "MAGNORDER",
                  "SUPERORDER",
                  "GRANDORDER",
                  "ORDER",
                  "SUBORDER",
                  "INFRAORDER",
                  "PARVORDER",
                  "SUPERFAMILY",
                  "FAMILY",
                  "SUBFAMILY",
                  "INFRAFAMILY",
                  "SUPERTRIBE",
                  "TRIBE",
                  "SUBTRIBE",
                  "INFRATRIBE",
                  "SUPRAGENERIC_NAME",
                  "GENUS",
                  "SUBGENUS",
                  "INFRAGENUS",
                  "SECTION",
                  "SUBSECTION",
                  "SERIES",
                  "SUBSERIES",
                  "INFRAGENERIC_NAME",
                  "SPECIES_AGGREGATE",
                  "SPECIES",
                  "INFRASPECIFIC_NAME",
                  "GREX",
                  "SUBSPECIES",
                  "CULTIVAR_GROUP",
                  "CONVARIETY",
                  "INFRASUBSPECIFIC_NAME",
                  "PROLES",
                  "RACE",
                  "NATIO",
                  "ABERRATION",
                  "MORPH",
                  "VARIETY",
                  "SUBVARIETY",
                  "FORM",
                  "SUBFORM",
                  "PATHOVAR",
                  "BIOVAR",
                  "CHEMOVAR",
                  "MORPHOVAR",
                  "PHAGOVAR",
                  "SEROVAR",
                  "CHEMOFORM",
                  "FORMA_SPECIALIS",
                  "CULTIVAR",
                  "STRAIN",
                  "OTHER",
                  "UNRANKED"
                ]
              }
            },
            {
              "name": "higherTaxonKey",
              "in": "query",
              "description": "Filters by any of the higher Linnean rank keys. Note this is within the respective checklist and not searching NUB keys across all checklists."
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filters by the taxonomic status as given in our https://api.gbif.org/v1/enumeration/basic/TaxonomicStatus[TaxonomicStatus enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DOUBTFUL",
                  "SYNONYM",
                  "HETEROTYPIC_SYNONYM",
                  "HOMOTYPIC_SYNONYM",
                  "PROPARTE_SYNONYM",
                  "MISAPPLIED"
                ]
              }
            },
            {
              "name": "isExtinct",
              "in": "query",
              "description": "Filters by extinction status.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "habitat",
              "in": "query",
              "description": "Filters by the habitat. Currently only 3 major biomes are accepted in our https://api.gbif.org/v1/enumeration/basic/Habitat[Habitat enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "MARINE",
                  "FRESHWATER",
                  "TERRESTRIAL"
                ]
              }
            },
            {
              "name": "threat",
              "in": "query",
              "description": "Filters by the taxonomic threat status as given in our https://api.gbif.org/v1/enumeration/basic/ThreatStatus[ThreatStatus enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "EXTINCT",
                  "EXTINCT_IN_THE_WILD",
                  "REGIONALLY_EXTINCT",
                  "CRITICALLY_ENDANGERED",
                  "ENDANGERED",
                  "VULNERABLE",
                  "NEAR_THREATENED",
                  "LEAST_CONCERN",
                  "DATA_DEFICIENT",
                  "NOT_APPLICABLE",
                  "NOT_EVALUATED"
                ]
              }
            },
            {
              "name": "nameType",
              "in": "query",
              "description": "Filters by the name type as given in our https://api.gbif.org/v1/enumeration/basic/NameType[NameType enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "SCIENTIFIC",
                  "VIRUS",
                  "HYBRID",
                  "INFORMAL",
                  "CULTIVAR",
                  "CANDIDATUS",
                  "OTU",
                  "DOUBTFUL",
                  "PLACEHOLDER",
                  "NO_NAME",
                  "BLACKLISTED"
                ]
              }
            },
            {
              "name": "nomenclaturalStatus",
              "in": "query",
              "description": "Filters by the nomenclatural status as given in our https://api.gbif.org/v1/enumeration/basic/NomenclaturalStatus[Nomenclatural Status enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "LEGITIMATE",
                  "VALIDLY_PUBLISHED",
                  "NEW_COMBINATION",
                  "REPLACEMENT",
                  "CONSERVED",
                  "PROTECTED",
                  "CORRECTED",
                  "ORIGINAL_COMBINATION",
                  "NEW_SPECIES",
                  "NEW_GENUS",
                  "ALTERNATIVE",
                  "OBSCURE",
                  "CONSERVED_PROPOSED",
                  "PROVISIONAL",
                  "SUBNUDUM",
                  "REJECTED_PROPOSED",
                  "REJECTED_OUTRIGHT_PROPOSED",
                  "DOUBTFUL",
                  "AMBIGUOUS",
                  "CONFUSED",
                  "FORGOTTEN",
                  "ABORTED",
                  "ORTHOGRAPHIC_VARIANT",
                  "SUPERFLUOUS",
                  "NUDUM",
                  "NULL_NAME",
                  "SUPPRESSED",
                  "REJECTED_OUTRIGHT",
                  "REJECTED",
                  "ILLEGITIMATE",
                  "INVALID",
                  "DENIED"
                ]
              }
            },
            {
              "name": "origin",
              "in": "query",
              "description": "Filters for name usages with a specific origin.",
              "schema": {
                "type": "string",
                "enum": [
                  "SOURCE",
                  "DENORMED_CLASSIFICATION",
                  "VERBATIM_PARENT",
                  "VERBATIM_ACCEPTED",
                  "VERBATIM_BASIONYM",
                  "PROPARTE",
                  "AUTONYM",
                  "IMPLICIT_NAME",
                  "MISSING_ACCEPTED",
                  "BASIONYM_PLACEHOLDER",
                  "EX_AUTHOR_SYNONYM",
                  "OTHER"
                ]
              }
            },
            {
              "name": "issue",
              "in": "query",
              "description": "A specific indexing issue as defined in our https://api.gbif.org/v1/enumeration/basic/NameUsageIssue[NameUsageIssue enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "PARENT_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_USAGE_ID_INVALID",
                  "ORIGINAL_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_MISSING",
                  "RANK_INVALID",
                  "NOMENCLATURAL_STATUS_INVALID",
                  "TAXONOMIC_STATUS_INVALID",
                  "SCIENTIFIC_NAME_ASSEMBLED",
                  "CHAINED_SYNOYM",
                  "BASIONYM_AUTHOR_MISMATCH",
                  "TAXONOMIC_STATUS_MISMATCH",
                  "PARENT_CYCLE",
                  "CLASSIFICATION_RANK_ORDER_INVALID",
                  "CLASSIFICATION_NOT_APPLIED",
                  "VERNACULAR_NAME_INVALID",
                  "DESCRIPTION_INVALID",
                  "DISTRIBUTION_INVALID",
                  "SPECIES_PROFILE_INVALID",
                  "MULTIMEDIA_INVALID",
                  "BIB_REFERENCE_INVALID",
                  "ALT_IDENTIFIER_INVALID",
                  "BACKBONE_MATCH_NONE",
                  "BACKBONE_MATCH_FUZZY",
                  "BACKBONE_MATCH_AGGREGATE",
                  "ACCEPTED_NAME_NOT_UNIQUE",
                  "PARENT_NAME_NOT_UNIQUE",
                  "ORIGINAL_NAME_NOT_UNIQUE",
                  "RELATIONSHIP_MISSING",
                  "ORIGINAL_NAME_DERIVED",
                  "CONFLICTING_BASIONYM_COMBINATION",
                  "NO_SPECIES",
                  "NAME_PARENT_MISMATCH",
                  "ORTHOGRAPHIC_VARIANT",
                  "HOMONYM",
                  "PUBLISHED_BEFORE_GENUS",
                  "UNPARSABLE",
                  "PARTIALLY_PARSABLE"
                ]
              }
            },
            {
              "name": "q",
              "in": "query",
              "description": "Simple full text search parameter. The value for this parameter can be a simple word or a phrase. Wildcards are not supported",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage suggestions found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsageSuggestResult"
                    }
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NameUsageSuggestResult"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          },
          "x-Order": {
            "Order": "0150"
          }
        }
      },
      "/species/search": {
        "get": {
          "tags": [
            "Searching names"
          ],
          "summary": "Full text search over name usages",
          "description": "Full-text search of name usages covering the scientific and vernacular names, the species description, distribution and the entire classification across all name usages of all or some checklists.\n\nResults are ordered by relevance as this search usually returns a lot of results.",
          "operationId": "searchNames",
          "parameters": [
            {
              "name": "datasetKey",
              "in": "query",
              "description": "A UUID of a checklist dataset.",
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "d7dddbf4-2cf0-4f39-9b2a-bb099caae36c"
            },
            {
              "name": "constituentKey",
              "in": "query",
              "description": "The (sub)dataset constituent key as a UUID. Useful to query larger assembled datasets such as the GBIF Backbone or the Catalogue of Life",
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            {
              "name": "rank",
              "in": "query",
              "description": "Filters by taxonomic rank as given in our https://api.gbif.org/v1/enumeration/basic/Rank[Rank enum].",
              "schema": {
                "type": "string",
                "externalDocs": {
                  "description": "Darwin Core definition",
                  "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
                },
                "enum": [
                  "DOMAIN",
                  "SUPERKINGDOM",
                  "KINGDOM",
                  "SUBKINGDOM",
                  "INFRAKINGDOM",
                  "SUPERPHYLUM",
                  "PHYLUM",
                  "SUBPHYLUM",
                  "INFRAPHYLUM",
                  "SUPERCLASS",
                  "CLASS",
                  "SUBCLASS",
                  "INFRACLASS",
                  "PARVCLASS",
                  "SUPERLEGION",
                  "LEGION",
                  "SUBLEGION",
                  "INFRALEGION",
                  "SUPERCOHORT",
                  "COHORT",
                  "SUBCOHORT",
                  "INFRACOHORT",
                  "MAGNORDER",
                  "SUPERORDER",
                  "GRANDORDER",
                  "ORDER",
                  "SUBORDER",
                  "INFRAORDER",
                  "PARVORDER",
                  "SUPERFAMILY",
                  "FAMILY",
                  "SUBFAMILY",
                  "INFRAFAMILY",
                  "SUPERTRIBE",
                  "TRIBE",
                  "SUBTRIBE",
                  "INFRATRIBE",
                  "SUPRAGENERIC_NAME",
                  "GENUS",
                  "SUBGENUS",
                  "INFRAGENUS",
                  "SECTION",
                  "SUBSECTION",
                  "SERIES",
                  "SUBSERIES",
                  "INFRAGENERIC_NAME",
                  "SPECIES_AGGREGATE",
                  "SPECIES",
                  "INFRASPECIFIC_NAME",
                  "GREX",
                  "SUBSPECIES",
                  "CULTIVAR_GROUP",
                  "CONVARIETY",
                  "INFRASUBSPECIFIC_NAME",
                  "PROLES",
                  "RACE",
                  "NATIO",
                  "ABERRATION",
                  "MORPH",
                  "VARIETY",
                  "SUBVARIETY",
                  "FORM",
                  "SUBFORM",
                  "PATHOVAR",
                  "BIOVAR",
                  "CHEMOVAR",
                  "MORPHOVAR",
                  "PHAGOVAR",
                  "SEROVAR",
                  "CHEMOFORM",
                  "FORMA_SPECIALIS",
                  "CULTIVAR",
                  "STRAIN",
                  "OTHER",
                  "UNRANKED"
                ]
              }
            },
            {
              "name": "higherTaxonKey",
              "in": "query",
              "description": "Filters by any of the higher Linnean rank keys. Note this is within the respective checklist and not searching NUB keys across all checklists."
            },
            {
              "name": "status",
              "in": "query",
              "description": "Filters by the taxonomic status as given in our https://api.gbif.org/v1/enumeration/basic/TaxonomicStatus[TaxonomicStatus enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "ACCEPTED",
                  "DOUBTFUL",
                  "SYNONYM",
                  "HETEROTYPIC_SYNONYM",
                  "HOMOTYPIC_SYNONYM",
                  "PROPARTE_SYNONYM",
                  "MISAPPLIED"
                ]
              }
            },
            {
              "name": "isExtinct",
              "in": "query",
              "description": "Filters by extinction status.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "habitat",
              "in": "query",
              "description": "Filters by the habitat. Currently only 3 major biomes are accepted in our https://api.gbif.org/v1/enumeration/basic/Habitat[Habitat enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "MARINE",
                  "FRESHWATER",
                  "TERRESTRIAL"
                ]
              }
            },
            {
              "name": "threat",
              "in": "query",
              "description": "Filters by the taxonomic threat status as given in our https://api.gbif.org/v1/enumeration/basic/ThreatStatus[ThreatStatus enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "EXTINCT",
                  "EXTINCT_IN_THE_WILD",
                  "REGIONALLY_EXTINCT",
                  "CRITICALLY_ENDANGERED",
                  "ENDANGERED",
                  "VULNERABLE",
                  "NEAR_THREATENED",
                  "LEAST_CONCERN",
                  "DATA_DEFICIENT",
                  "NOT_APPLICABLE",
                  "NOT_EVALUATED"
                ]
              }
            },
            {
              "name": "nameType",
              "in": "query",
              "description": "Filters by the name type as given in our https://api.gbif.org/v1/enumeration/basic/NameType[NameType enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "SCIENTIFIC",
                  "VIRUS",
                  "HYBRID",
                  "INFORMAL",
                  "CULTIVAR",
                  "CANDIDATUS",
                  "OTU",
                  "DOUBTFUL",
                  "PLACEHOLDER",
                  "NO_NAME",
                  "BLACKLISTED"
                ]
              }
            },
            {
              "name": "nomenclaturalStatus",
              "in": "query",
              "description": "Filters by the nomenclatural status as given in our https://api.gbif.org/v1/enumeration/basic/NomenclaturalStatus[Nomenclatural Status enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "LEGITIMATE",
                  "VALIDLY_PUBLISHED",
                  "NEW_COMBINATION",
                  "REPLACEMENT",
                  "CONSERVED",
                  "PROTECTED",
                  "CORRECTED",
                  "ORIGINAL_COMBINATION",
                  "NEW_SPECIES",
                  "NEW_GENUS",
                  "ALTERNATIVE",
                  "OBSCURE",
                  "CONSERVED_PROPOSED",
                  "PROVISIONAL",
                  "SUBNUDUM",
                  "REJECTED_PROPOSED",
                  "REJECTED_OUTRIGHT_PROPOSED",
                  "DOUBTFUL",
                  "AMBIGUOUS",
                  "CONFUSED",
                  "FORGOTTEN",
                  "ABORTED",
                  "ORTHOGRAPHIC_VARIANT",
                  "SUPERFLUOUS",
                  "NUDUM",
                  "NULL_NAME",
                  "SUPPRESSED",
                  "REJECTED_OUTRIGHT",
                  "REJECTED",
                  "ILLEGITIMATE",
                  "INVALID",
                  "DENIED"
                ]
              }
            },
            {
              "name": "origin",
              "in": "query",
              "description": "Filters for name usages with a specific origin.",
              "schema": {
                "type": "string",
                "enum": [
                  "SOURCE",
                  "DENORMED_CLASSIFICATION",
                  "VERBATIM_PARENT",
                  "VERBATIM_ACCEPTED",
                  "VERBATIM_BASIONYM",
                  "PROPARTE",
                  "AUTONYM",
                  "IMPLICIT_NAME",
                  "MISSING_ACCEPTED",
                  "BASIONYM_PLACEHOLDER",
                  "EX_AUTHOR_SYNONYM",
                  "OTHER"
                ]
              }
            },
            {
              "name": "issue",
              "in": "query",
              "description": "A specific indexing issue as defined in our https://api.gbif.org/v1/enumeration/basic/NameUsageIssue[NameUsageIssue enum].",
              "schema": {
                "type": "string",
                "enum": [
                  "PARENT_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_USAGE_ID_INVALID",
                  "ORIGINAL_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_MISSING",
                  "RANK_INVALID",
                  "NOMENCLATURAL_STATUS_INVALID",
                  "TAXONOMIC_STATUS_INVALID",
                  "SCIENTIFIC_NAME_ASSEMBLED",
                  "CHAINED_SYNOYM",
                  "BASIONYM_AUTHOR_MISMATCH",
                  "TAXONOMIC_STATUS_MISMATCH",
                  "PARENT_CYCLE",
                  "CLASSIFICATION_RANK_ORDER_INVALID",
                  "CLASSIFICATION_NOT_APPLIED",
                  "VERNACULAR_NAME_INVALID",
                  "DESCRIPTION_INVALID",
                  "DISTRIBUTION_INVALID",
                  "SPECIES_PROFILE_INVALID",
                  "MULTIMEDIA_INVALID",
                  "BIB_REFERENCE_INVALID",
                  "ALT_IDENTIFIER_INVALID",
                  "BACKBONE_MATCH_NONE",
                  "BACKBONE_MATCH_FUZZY",
                  "BACKBONE_MATCH_AGGREGATE",
                  "ACCEPTED_NAME_NOT_UNIQUE",
                  "PARENT_NAME_NOT_UNIQUE",
                  "ORIGINAL_NAME_NOT_UNIQUE",
                  "RELATIONSHIP_MISSING",
                  "ORIGINAL_NAME_DERIVED",
                  "CONFLICTING_BASIONYM_COMBINATION",
                  "NO_SPECIES",
                  "NAME_PARENT_MISMATCH",
                  "ORTHOGRAPHIC_VARIANT",
                  "HOMONYM",
                  "PUBLISHED_BEFORE_GENUS",
                  "UNPARSABLE",
                  "PARTIALLY_PARSABLE"
                ]
              }
            },
            {
              "name": "q",
              "in": "query",
              "description": "Simple full text search parameter. The value for this parameter can be a simple word or a phrase. Wildcards are not supported",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hl",
              "in": "query",
              "description": "Set `hl=true` to highlight terms matching the query when in fulltext search fields. The highlight will be an emphasis tag of class `gbifHl`.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "facet",
              "in": "query",
              "description": "A facet name used to retrieve the most frequent values for a field. This parameter may be repeated to request multiple facets.",
              "explode": true,
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            {
              "name": "facetMincount",
              "in": "query",
              "description": "Used in combination with the facet parameter. Set `facetMincount={#}` to exclude facets with a count less than `{#}`.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "facetMultiselect",
              "in": "query",
              "description": "Used in combination with the facet parameter. Set `facetMultiselect=true` to still return counts for values that are not currently filtered.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "facetLimit",
              "in": "query",
              "description": "Facet parameters allow paging requests using the parameters facetOffset and facetLimit",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "facetOffset",
              "in": "query",
              "description": "Facet parameters allow paging requests using the parameters facetOffset and facetLimit",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Name usages found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SearchResponseNameUsageSearchResultNameUsageSearchParameter"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/SearchResponseNameUsageSearchResultNameUsageSearchParameter"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          },
          "x-Order": {
            "Order": "0110"
          }
        }
      },
      "/species/root/{datasetKey}": {
        "get": {
          "tags": [
            "Species"
          ],
          "summary": "Root name usages of a dataset",
          "description": "Retrieves root name usages for a checklist dataset.",
          "operationId": "getRootUsages",
          "parameters": [
            {
              "name": "datasetKey",
              "in": "path",
              "description": "A UUID of a checklist dataset.",
              "required": true,
              "schema": {
                "type": "string",
                "format": "uuid"
              },
              "example": "d7dddbf4-2cf0-4f39-9b2a-bb099caae36c"
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Controls the number of results in the page. Using too high a value will be overwritten with the default maximum threshold, depending on the service. Sensible defaults are used so this may be omitted.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "Determines the offset for the search results. A limit of 20 and offset of 40 will get the third page of 20 results. Some services have a maximum offset.",
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Root name usages found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          }
        }
      },
      "/species": {
        "get": {
          "tags": [
            "Searching names"
          ],
          "summary": "List all name usages",
          "description": "Lists all name usages across all checklists.",
          "operationId": "listNames",
          "parameters": [
            {
              "name": "datasetKey",
              "in": "query",
              "description": "A UUID of a checklist dataset.",
              "required": false,
              "schema": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            },
            {
              "name": "sourceId",
              "in": "query",
              "description": "Filters by the source identifier.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "name",
              "in": "query",
              "description": "A name without authorship, to match exactly.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "required": true,
              "schema": {
                "$ref": "#/components/schemas/Pageable"
              }
            },
            {
              "name": "Accept-Language",
              "in": "header",
              "description": "Language for vernacular names, given as an ISO 639-1 **two-letter** code from our [vocabulary](https://api.gbif.org/v1/enumeration/language).",
              "schema": {
                "type": "string",
                "enum": [
                  "abk",
                  "aar",
                  "afr",
                  "aka",
                  "sqi",
                  "amh",
                  "ara",
                  "arg",
                  "hye",
                  "asm",
                  "ava",
                  "ave",
                  "aym",
                  "aze",
                  "bam",
                  "bak",
                  "eus",
                  "bel",
                  "ben",
                  "bih",
                  "bis",
                  "bos",
                  "bre",
                  "bul",
                  "mya",
                  "cat",
                  "cha",
                  "che",
                  "zho",
                  "chu",
                  "chv",
                  "cor",
                  "cos",
                  "cre",
                  "hrv",
                  "ces",
                  "dan",
                  "div",
                  "nld",
                  "dzo",
                  "eng",
                  "epo",
                  "est",
                  "ewe",
                  "fao",
                  "fij",
                  "fin",
                  "fra",
                  "fry",
                  "ful",
                  "glg",
                  "lug",
                  "kat",
                  "deu",
                  "ell",
                  "kal",
                  "grn",
                  "guj",
                  "hat",
                  "hau",
                  "heb",
                  "her",
                  "hin",
                  "hmo",
                  "hun",
                  "isl",
                  "ido",
                  "ibo",
                  "ind",
                  "ina",
                  "ile",
                  "iku",
                  "ipk",
                  "gle",
                  "ita",
                  "jpn",
                  "jav",
                  "kan",
                  "kau",
                  "kas",
                  "kaz",
                  "khm",
                  "kik",
                  "kin",
                  "kir",
                  "kom",
                  "kon",
                  "kor",
                  "kur",
                  "kua",
                  "lao",
                  "lat",
                  "lav",
                  "lim",
                  "lin",
                  "lit",
                  "lub",
                  "ltz",
                  "mkd",
                  "mlg",
                  "msa",
                  "mal",
                  "mlt",
                  "glv",
                  "mri",
                  "mar",
                  "mah",
                  "mol",
                  "mon",
                  "nau",
                  "nav",
                  "ndo",
                  "nep",
                  "nde",
                  "sme",
                  "nob",
                  "nno",
                  "nor",
                  "nya",
                  "oci",
                  "oji",
                  "ori",
                  "orm",
                  "oss",
                  "pli",
                  "pan",
                  "fas",
                  "pol",
                  "por",
                  "pus",
                  "que",
                  "roh",
                  "ron",
                  "run",
                  "rus",
                  "smo",
                  "sag",
                  "san",
                  "srd",
                  "gla",
                  "srp",
                  "sna",
                  "iii",
                  "snd",
                  "sin",
                  "slk",
                  "slv",
                  "som",
                  "nbl",
                  "sot",
                  "spa",
                  "sun",
                  "swa",
                  "ssw",
                  "swe",
                  "tgl",
                  "tah",
                  "tgk",
                  "tam",
                  "tat",
                  "tel",
                  "tha",
                  "bod",
                  "tir",
                  "ton",
                  "tso",
                  "tsn",
                  "tur",
                  "tuk",
                  "twi",
                  "uig",
                  "ukr",
                  "urd",
                  "uzb",
                  "ven",
                  "vie",
                  "vol",
                  "wln",
                  "cym",
                  "wol",
                  "xho",
                  "yid",
                  "yor",
                  "zha",
                  "zul",
                  ""
                ]
              },
              "example": "en"
            }
          ],
          "responses": {
            "200": {
              "description": "Name usages found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/PagingResponseNameUsage"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid query"
            },
            "404": {
              "description": "Name usage not found"
            }
          },
          "x-Order": {
            "Order": "0100"
          }
        }
      },
      "/species/match": {
        "get": {
          "tags": [
            "Searching names"
          ],
          "summary": "Fuzzy name match service",
          "description": "Fuzzy matches scientific names against the GBIF Backbone Taxonomy with the optional classification provided. If a classification is provided and strict is not set to true, the default matching will also try to match against these if no direct match is found for the name parameter alone.\n\nAdditionally, a lookup may be performed by providing the usageKey which will short-circuit the name-based matching and ONLY use the given key, either finding the concept or returning no match.",
          "operationId": "matchNames",
          "parameters": [
            {
              "name": "usageKey",
              "in": "query",
              "description": "The usage key to look up. When provided, all other fields are ignored.",
              "required": false,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            },
            {
              "name": "name",
              "in": "query",
              "description": "The scientific name to fuzzy match against. May include the authorship and year",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "authorship",
              "in": "query",
              "description": "The scientific name authorship to fuzzy match against.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "rank",
              "in": "query",
              "description": "Filters by taxonomic rank as given in our https://api.gbif.org/v1/enumeration/basic/Rank[Rank enum].",
              "required": false,
              "schema": {
                "type": "string",
                "externalDocs": {
                  "description": "Darwin Core definition",
                  "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
                },
                "enum": [
                  "DOMAIN",
                  "SUPERKINGDOM",
                  "KINGDOM",
                  "SUBKINGDOM",
                  "INFRAKINGDOM",
                  "SUPERPHYLUM",
                  "PHYLUM",
                  "SUBPHYLUM",
                  "INFRAPHYLUM",
                  "SUPERCLASS",
                  "CLASS",
                  "SUBCLASS",
                  "INFRACLASS",
                  "PARVCLASS",
                  "SUPERLEGION",
                  "LEGION",
                  "SUBLEGION",
                  "INFRALEGION",
                  "SUPERCOHORT",
                  "COHORT",
                  "SUBCOHORT",
                  "INFRACOHORT",
                  "MAGNORDER",
                  "SUPERORDER",
                  "GRANDORDER",
                  "ORDER",
                  "SUBORDER",
                  "INFRAORDER",
                  "PARVORDER",
                  "SUPERFAMILY",
                  "FAMILY",
                  "SUBFAMILY",
                  "INFRAFAMILY",
                  "SUPERTRIBE",
                  "TRIBE",
                  "SUBTRIBE",
                  "INFRATRIBE",
                  "SUPRAGENERIC_NAME",
                  "GENUS",
                  "SUBGENUS",
                  "INFRAGENUS",
                  "SECTION",
                  "SUBSECTION",
                  "SERIES",
                  "SUBSERIES",
                  "INFRAGENERIC_NAME",
                  "SPECIES_AGGREGATE",
                  "SPECIES",
                  "INFRASPECIFIC_NAME",
                  "GREX",
                  "SUBSPECIES",
                  "CULTIVAR_GROUP",
                  "CONVARIETY",
                  "INFRASUBSPECIFIC_NAME",
                  "PROLES",
                  "RACE",
                  "NATIO",
                  "ABERRATION",
                  "MORPH",
                  "VARIETY",
                  "SUBVARIETY",
                  "FORM",
                  "SUBFORM",
                  "PATHOVAR",
                  "BIOVAR",
                  "CHEMOVAR",
                  "MORPHOVAR",
                  "PHAGOVAR",
                  "SEROVAR",
                  "CHEMOFORM",
                  "FORMA_SPECIALIS",
                  "CULTIVAR",
                  "STRAIN",
                  "OTHER",
                  "UNRANKED"
                ]
              }
            },
            {
              "name": "genericName",
              "in": "query",
              "description": "Generic part of the name to match when given as atomised parts instead of the full name parameter.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "specificEpithet",
              "in": "query",
              "description": "Specific epithet to match.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "infraspecificEpithet",
              "in": "query",
              "description": "Infraspecific epithet to match.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "strict",
              "in": "query",
              "description": "If true it fuzzy matches only the given name, but never a taxon in the upper classification.",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "verbose",
              "in": "query",
              "description": "If true it shows alternative matches which were considered but then rejected.",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "kingdom",
              "in": "query",
              "description": "Kingdom to match."
            },
            {
              "name": "phylum",
              "in": "query",
              "description": "Phylum to match."
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order to match."
            },
            {
              "name": "class",
              "in": "query",
              "description": "Class to match."
            },
            {
              "name": "family",
              "in": "query",
              "description": "Family to match."
            },
            {
              "name": "genus",
              "in": "query",
              "description": "Genus to match."
            }
          ],
          "responses": {
            "200": {
              "description": "Name usage suggestions found",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsageMatch"
                  }
                },
                "application/x-javascript": {
                  "schema": {
                    "$ref": "#/components/schemas/NameUsageMatch"
                  }
                }
              }
            }
          },
          "x-Order": {
            "Order": "0130"
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ParsedName": {
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "description": "The key for this parsed name object.",
              "format": "int32"
            },
            "scientificName": {
              "type": "string",
              "description": "The exact verbatim, full scientific name as given before parsing."
            },
            "type": {
              "type": "string",
              "description": "A coarse classification of names helping to deal with different syntactical name string structures.",
              "enum": [
                "SCIENTIFIC",
                "VIRUS",
                "HYBRID",
                "INFORMAL",
                "CULTIVAR",
                "CANDIDATUS",
                "OTU",
                "DOUBTFUL",
                "PLACEHOLDER",
                "NO_NAME",
                "BLACKLISTED"
              ]
            },
            "genusOrAbove": {
              "type": "string",
              "description": "The genus part of a bi/trinomial or the monomial in case of names of higher ranks."
            },
            "infraGeneric": {
              "type": "string",
              "description": "The infrageneric part of a name, often given in parentheses between genus and species epithet, e.g. for a subgenus"
            },
            "specificEpithet": {
              "type": "string",
              "description": "The specific epithet of the name"
            },
            "infraSpecificEpithet": {
              "type": "string",
              "description": "The infraspecific part of a name."
            },
            "cultivarEpithet": {
              "type": "string",
              "description": "The cultivar, cultivar group or grex part of a cultivated plant name.\n\nIf given the name should be of type CULTIVAR"
            },
            "strain": {
              "type": "string",
              "description": "The strain or isolate name. Usually a capital collection code string followed by an accession number.\n\nSee [List of culture collection codes](http://www.bacterio.net/-collections.html).  If given the name should be of type STRAIN."
            },
            "notho": {
              "type": "string",
              "description": "For hybrid names notho indicates which part of the name is considered a hybrid, i.e. genus, species or infraspecific epithet.",
              "enum": [
                "GENERIC",
                "INFRAGENERIC",
                "SPECIFIC",
                "INFRASPECIFIC"
              ]
            },
            "authorship": {
              "type": "string",
              "description": "The original author of this name, e.g. basionym or recombination author."
            },
            "year": {
              "type": "string",
              "description": "The year of publication as given in the authorship."
            },
            "bracketAuthorship": {
              "type": "string",
              "description": "The authorship of the original name, i.e. basionym, given in brackets."
            },
            "bracketYear": {
              "type": "string",
              "description": "The code relevant year of publication of the original name, i.e. basionym, given in brackets."
            },
            "sensu": {
              "type": "string",
              "description": "Taxon concept references as part of the name, e.g. “MSW2006” for *Gorilla gorilla* (Savage, 1847) sec. MSW2005"
            },
            "parsed": {
              "type": "boolean",
              "description": "A flag indicating if a name could not be parsed at all.\n\nIf false, only the scientific name, rank and potentially the name type is given."
            },
            "parsedPartially": {
              "type": "boolean",
              "description": "The GBIF name parser cannot always parse the entire name.\n\nThis is often the case when taxonomic, nomenclatural or identification notes are added to the end of the name. In such cases when the name was only partially parsed (NameUsageIssue.PARTIALLY_PARSABLE) this flag should be true.\n\nIf the name was not parsed at all this will be false."
            },
            "nomStatus": {
              "type": "string",
              "description": "Any nomenclatoral remarks given in this name, e.g. nom. illeg."
            },
            "remarks": {
              "type": "string",
              "description": "Any further remarks found."
            },
            "canonicalName": {
              "type": "string",
              "description": "The canonical name *sensu strictu* with nothing else but three name parts at most (genus, species, infraspecific).\n\nNo rank or hybrid markers and no authorship, cultivar or strain information.\n\nInfrageneric names are represented without a leading genus.\n\nUnicode characters are replaced by their matching ASCII characters."
            },
            "canonicalNameWithMarker": {
              "type": "string",
              "description": "The code-compliant, canonical name with three name parts at max (genus, species, infraspecific), a rank marker for infraspecific names and cultivar or strain epithets. The canonical name can be a 1, 2 or 3 parted name, but does not include any informal notes or authorships. Notho taxa will have the hybrid marker.\n\nUnicode characters will be replaced by their matching ASCII characters."
            },
            "canonicalNameComplete": {
              "type": "string",
              "description": "The code-compliant, canonical name with rank and hybrid marker, authorship and cultivar or strain name included. Informal or nomenclatoral notes, concept references, subgenus and non-terminal authorships are removed."
            },
            "rankMarker": {
              "type": "string",
              "description": "The taxonomic rank of the name.",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            }
          }
        },
        "PagingResponseVernacularName": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/VernacularName"
              }
            }
          }
        },
        "VernacularName": {
          "required": [
            "vernacularName"
          ],
          "type": "object",
          "properties": {
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this vernacular name belongs.",
              "format": "int32"
            },
            "vernacularName": {
              "type": "string",
              "description": "A common or vernacular name."
            },
            "language": {
              "type": "string",
              "description": "The language (from ISO 639-1) of the vernacular name.",
              "enum": [
                "abk",
                "aar",
                "afr",
                "aka",
                "sqi",
                "amh",
                "ara",
                "arg",
                "hye",
                "asm",
                "ava",
                "ave",
                "aym",
                "aze",
                "bam",
                "bak",
                "eus",
                "bel",
                "ben",
                "bih",
                "bis",
                "bos",
                "bre",
                "bul",
                "mya",
                "cat",
                "cha",
                "che",
                "zho",
                "chu",
                "chv",
                "cor",
                "cos",
                "cre",
                "hrv",
                "ces",
                "dan",
                "div",
                "nld",
                "dzo",
                "eng",
                "epo",
                "est",
                "ewe",
                "fao",
                "fij",
                "fin",
                "fra",
                "fry",
                "ful",
                "glg",
                "lug",
                "kat",
                "deu",
                "ell",
                "kal",
                "grn",
                "guj",
                "hat",
                "hau",
                "heb",
                "her",
                "hin",
                "hmo",
                "hun",
                "isl",
                "ido",
                "ibo",
                "ind",
                "ina",
                "ile",
                "iku",
                "ipk",
                "gle",
                "ita",
                "jpn",
                "jav",
                "kan",
                "kau",
                "kas",
                "kaz",
                "khm",
                "kik",
                "kin",
                "kir",
                "kom",
                "kon",
                "kor",
                "kur",
                "kua",
                "lao",
                "lat",
                "lav",
                "lim",
                "lin",
                "lit",
                "lub",
                "ltz",
                "mkd",
                "mlg",
                "msa",
                "mal",
                "mlt",
                "glv",
                "mri",
                "mar",
                "mah",
                "mol",
                "mon",
                "nau",
                "nav",
                "ndo",
                "nep",
                "nde",
                "sme",
                "nob",
                "nno",
                "nor",
                "nya",
                "oci",
                "oji",
                "ori",
                "orm",
                "oss",
                "pli",
                "pan",
                "fas",
                "pol",
                "por",
                "pus",
                "que",
                "roh",
                "ron",
                "run",
                "rus",
                "smo",
                "sag",
                "san",
                "srd",
                "gla",
                "srp",
                "sna",
                "iii",
                "snd",
                "sin",
                "slk",
                "slv",
                "som",
                "nbl",
                "sot",
                "spa",
                "sun",
                "swa",
                "ssw",
                "swe",
                "tgl",
                "tah",
                "tgk",
                "tam",
                "tat",
                "tel",
                "tha",
                "bod",
                "tir",
                "ton",
                "tso",
                "tsn",
                "tur",
                "tuk",
                "twi",
                "uig",
                "ukr",
                "urd",
                "uzb",
                "ven",
                "vie",
                "vol",
                "wln",
                "cym",
                "wol",
                "xho",
                "yid",
                "yor",
                "zha",
                "zul",
                ""
              ]
            },
            "lifeStage": {
              "type": "string",
              "description": "The age class or life stage of the species for which the vernacular name applies.\n\nFor example, a juvenile *Anser anser* is called a “gosling“.",
              "enum": [
                "ZYGOTE",
                "EMRYO",
                "LARVA",
                "JUVENILE",
                "ADULT",
                "SPOROPHYTE",
                "SPORE",
                "GAMETOPHYTE",
                "GAMETE",
                "PUPA"
              ]
            },
            "sex": {
              "type": "string",
              "description": "The sex of the biological individual(s) represented in the Occurrence.\n\nFor definitions, see the [GBIF sex vocabulary](http://rs.gbif.org/vocabulary/gbif/sex)",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/sex"
              },
              "enum": [
                "NONE",
                "MALE",
                "FEMALE",
                "HERMAPHRODITE"
              ]
            },
            "country": {
              "type": "string",
              "description": "The country or area in which the vernacular name is used.",
              "externalDocs": {
                "description": "API call to retrieve all official values.",
                "url": "https://api.gbif.org/v1/enumeration/country"
              },
              "enum": [
                "AF",
                "AX",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "BN",
                "BG",
                "BF",
                "BI",
                "KH",
                "CM",
                "CA",
                "CV",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "CX",
                "CC",
                "CO",
                "KM",
                "CD",
                "CG",
                "CK",
                "CR",
                "CI",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HK",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KP",
                "KR",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MO",
                "MK",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MD",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PS",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "SD",
                "SR",
                "SJ",
                "SZ",
                "SE",
                "CH",
                "SY",
                "TW",
                "TJ",
                "TZ",
                "TH",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "GB",
                "US",
                "UM",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "VG",
                "VI",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW",
                "AA",
                "XK",
                "XZ",
                "ZZ"
              ]
            },
            "area": {
              "type": "string",
              "description": "The area where the vernacular name is used."
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source where the vernacular name refers to the cited species."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this vernacular name.",
              "format": "int32"
            },
            "preferred": {
              "type": "boolean",
              "description": "This term is true if the source citing the use of this vernacular name indicates the usage has some preference or specific standing over other possible vernacular names used for the species."
            },
            "plural": {
              "type": "boolean",
              "description": "True if the vernacular name refers to a plural form of the name."
            }
          },
          "description": "Search results."
        },
        "VerbatimNameUsage": {
          "required": [
            "extensions",
            "key"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "description": "The name usage key that uniquely identifies this name usage.",
              "format": "int32"
            },
            "extensions": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "description": "Extension records, holding all verbatim extension terms.\n\nA map keyed by extension term names, containing lists of property terms + values.",
                "items": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string",
                    "description": "Extension records, holding all verbatim extension terms.\n\nA map keyed by extension term names, containing lists of property terms + values."
                  },
                  "description": "Extension records, holding all verbatim extension terms.\n\nA map keyed by extension term names, containing lists of property terms + values."
                }
              },
              "description": "Extension records, holding all verbatim extension terms.\n\nA map keyed by extension term names, containing lists of property terms + values."
            },
            "lastCrawled": {
              "type": "string",
              "description": "The date this record was last crawled (downloaded from the source) during Checklistbank indexing.",
              "format": "date-time"
            }
          }
        },
        "PagingResponseTypeSpecimen": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/TypeSpecimen"
              }
            }
          }
        },
        "TypeSpecimen": {
          "type": "object",
          "properties": {
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ to which this type specimen belongs.",
              "format": "int32"
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source for the type specimen."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this type specimen.",
              "format": "int32"
            },
            "typeDesignationType": {
              "type": "string",
              "description": "The reason why this specimen is designated as a type.",
              "enum": [
                "ORIGINAL_DESIGNATION",
                "PRESENT_DESIGNATION",
                "SUBSEQUENT_DESIGNATION",
                "MONOTYPY",
                "SUBSEQUENT_MONOTYPY",
                "TAUTONYMY",
                "ABSOLUTE_TAUTONYMY",
                "LINNAEAN_TAUTONYMY",
                "RULING_BY_COMMISSION"
              ]
            },
            "typeDesignatedBy": {
              "type": "string",
              "description": "The citation of the publication where the type designation is found."
            },
            "scientificName": {
              "type": "string",
              "description": "The scientific name originally used for the specimen, species or genus.\n\nNot necessarily the same as the currently recognized name.  For type species this is the species name."
            },
            "taxonRank": {
              "type": "string",
              "description": "The rank of the taxon bearing the scientific name.",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "typeStatus": {
              "type": "string",
              "description": "The type status of the specimen, not used for type species or type genera.",
              "deprecated": true,
              "enum": [
                "TYPE",
                "TYPE_SPECIES",
                "TYPE_GENUS",
                "ALLOLECTOTYPE",
                "ALLONEOTYPE",
                "ALLOTYPE",
                "COTYPE",
                "EPITYPE",
                "EXEPITYPE",
                "EXHOLOTYPE",
                "EXISOTYPE",
                "EXLECTOTYPE",
                "EXNEOTYPE",
                "EXPARATYPE",
                "EXSYNTYPE",
                "EXTYPE",
                "HAPANTOTYPE",
                "HOLOTYPE",
                "HYPOTYPE",
                "ICONOTYPE",
                "ISOLECTOTYPE",
                "ISONEOTYPE",
                "ISOPARATYPE",
                "ISOSYNTYPE",
                "ISOTYPE",
                "LECTOTYPE",
                "NEOTYPE",
                "NOTATYPE",
                "ORIGINALMATERIAL",
                "PARALECTOTYPE",
                "PARANEOTYPE",
                "PARATYPE",
                "PLASTOHOLOTYPE",
                "PLASTOISOTYPE",
                "PLASTOLECTOTYPE",
                "PLASTONEOTYPE",
                "PLASTOPARATYPE",
                "PLASTOSYNTYPE",
                "PLASTOTYPE",
                "PLESIOTYPE",
                "SECONDARYTYPE",
                "SUPPLEMENTARYTYPE",
                "SYNTYPE",
                "TOPOTYPE"
              ]
            },
            "citation": {
              "type": "string",
              "description": "A text string citing the described speciemn.",
              "deprecated": true
            },
            "verbatimLabel": {
              "type": "string",
              "description": "The full, verbatim text from the specimen label.",
              "deprecated": true
            },
            "locality": {
              "type": "string",
              "description": "The locality where the type specimen was collected, the type locality.",
              "deprecated": true
            },
            "recordedBy": {
              "type": "string",
              "description": "The primary collector or observer, especially one who applied a personal identifier (recordNumber), should be listed first.",
              "deprecated": true
            },
            "verbatimEventDate": {
              "type": "string",
              "description": "The date when the specimen was collected.",
              "deprecated": true
            },
            "verbatimLongitude": {
              "type": "string",
              "description": "The geographic longitude.",
              "deprecated": true
            },
            "verbatimLatitude": {
              "type": "string",
              "description": "The geographic latitude.",
              "deprecated": true
            },
            "occurrenceId": {
              "type": "string",
              "description": "An identifier for the specimen, preferable a resolvable, globally-unique identifier.",
              "deprecated": true
            },
            "institutionCode": {
              "type": "string",
              "description": "The name or acronym in use by the institution having custody of the type specimen or information referred to in the record.",
              "deprecated": true
            },
            "collectionCode": {
              "type": "string",
              "description": "The name, acronym, code or initialism identifying the collection or dataset from which the record was derived.",
              "deprecated": true
            },
            "catalogNumber": {
              "type": "string",
              "description": "An identifier, preferable unique, for the record within the dataset or collection.",
              "deprecated": true
            }
          },
          "description": "Search results."
        },
        "TableOfContents": {
          "type": "object",
          "properties": {
            "toc": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "description": "A table of contents by language, section and description.",
                  "items": {
                    "type": "integer",
                    "description": "A table of contents by language, section and description.",
                    "format": "int32"
                  }
                },
                "description": "A table of contents by language, section and description."
              },
              "description": "A table of contents by language, section and description."
            }
          }
        },
        "NameUsage": {
          "required": [
            "datasetKey",
            "issues",
            "key",
            "origin",
            "scientificName"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "description": "The name usage key that uniquely identifies this name usage.",
              "format": "int32"
            },
            "nubKey": {
              "type": "integer",
              "description": "The taxon key of the matching backbone name usage.\n\nIf this is equal to `key`, this name usage is a backbone name usage.",
              "format": "int32"
            },
            "nameKey": {
              "type": "integer",
              "description": "The key for retrieving a parsed name object.\n\n*You are more likely to need the `key` or `nubKey` properties*",
              "format": "int32"
            },
            "taxonID": {
              "type": "string",
              "description": "The original taxonID of the name usage as found in the source.\n\nFor backbone taxa and name usages with an origin different to SOURCE this is null."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The key of the name usage from which this backbone taxon derives.\n\nFor backbone taxa the source taxon key refers to the original name usage that was used during backbone building and is the primary reason that this taxon exists in the backbone.\n\nAll backbone name usages are built from several underlying checklist usages, but these are sorted by priority and the usage key for the highest priority one becomes the sourceTaxonKey for a backbone usage.\n\nSome backbone usages do not have any source record at all; for example if there is a subspecies found, but no matching parent species, the missing species will be created nevertheless and has no primary source.",
              "format": "int32"
            },
            "kingdom": {
              "type": "string",
              "description": "Kingdom."
            },
            "phylum": {
              "type": "string",
              "description": "Phylum."
            },
            "order": {
              "type": "string",
              "description": "Order."
            },
            "family": {
              "type": "string",
              "description": "Family."
            },
            "genus": {
              "type": "string",
              "description": "Genus."
            },
            "subgenus": {
              "type": "string",
              "description": "Subgenus."
            },
            "species": {
              "type": "string",
              "description": "Species."
            },
            "kingdomKey": {
              "type": "integer",
              "description": "Name usage key of the kingdom.",
              "format": "int32"
            },
            "phylumKey": {
              "type": "integer",
              "description": "Name usage key of the phylum.",
              "format": "int32"
            },
            "classKey": {
              "type": "integer",
              "description": "Name usage key of the class.",
              "format": "int32"
            },
            "orderKey": {
              "type": "integer",
              "description": "Name usage key of the order.",
              "format": "int32"
            },
            "familyKey": {
              "type": "integer",
              "description": "Name usage key of the family.",
              "format": "int32"
            },
            "genusKey": {
              "type": "integer",
              "description": "Name usage key of the genus.",
              "format": "int32"
            },
            "subgenusKey": {
              "type": "integer",
              "description": "Name usage key of the subgenus.",
              "format": "int32"
            },
            "speciesKey": {
              "type": "integer",
              "description": "Name usage key of the species.",
              "format": "int32"
            },
            "datasetKey": {
              "type": "string",
              "description": "The checklist that “hosts” this name usage.\n\nFor a backbone name usage, this will be `d7dddbf4-2cf0-4f39-9b2a-bb099caae36c`.",
              "format": "uuid"
            },
            "constituentKey": {
              "type": "string",
              "description": "The optional sub-dataset key for this usage.",
              "format": "uuid"
            },
            "parentKey": {
              "type": "integer",
              "description": "The name usage key of the immediate parent.  Null for the highest taxonomic level.",
              "format": "int32"
            },
            "parent": {
              "type": "string",
              "description": "The scientific name of the parent."
            },
            "proParteKey": {
              "type": "integer",
              "description": "The primary name usage key for a *pro parte* synonym.\n\nSynonyms with multiple accepted names are grouped by a single, primary name usage key.",
              "format": "int32"
            },
            "acceptedKey": {
              "type": "integer",
              "description": "The name usage key of the accepted name.",
              "format": "int32"
            },
            "accepted": {
              "type": "string",
              "description": "The scientific name of the accepted name."
            },
            "basionymKey": {
              "type": "integer",
              "description": "The name usage key of the basionym.",
              "format": "int32"
            },
            "basionym": {
              "type": "string",
              "description": "The scientific name of the basionym."
            },
            "scientificName": {
              "type": "string",
              "description": "The scientific name, with date and authorship information if available.\n\nExamples: *Coleoptera* (order), *Vespertilionidae* (family), *Manis* (genus), *Ctenomys sociabilis* (genus + specificEpithet), *Ambystoma tigrinum diaboli* (zoology, genus + specific name + infraspecific name) *Quercus agrifolia* var. *oxyadenia* (Torr.) (botany, genus + specific epithet + infraspecific epithet + authorship)"
            },
            "canonicalName": {
              "type": "string",
              "description": "The canonical name; the name without authorship or references."
            },
            "vernacularName": {
              "type": "string",
              "description": "A common or vernacular name for this usage."
            },
            "authorship": {
              "type": "string",
              "description": "The authorship for the scientific name."
            },
            "nameType": {
              "type": "string",
              "description": "The type of name string classified by Checklistbank.",
              "enum": [
                "SCIENTIFIC",
                "VIRUS",
                "HYBRID",
                "INFORMAL",
                "CULTIVAR",
                "CANDIDATUS",
                "OTU",
                "DOUBTFUL",
                "PLACEHOLDER",
                "NO_NAME",
                "BLACKLISTED"
              ]
            },
            "rank": {
              "type": "string",
              "description": "The rank for this usage.",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "origin": {
              "type": "string",
              "description": "The name usage origin.\n\nThe origin of this name usage record, the reason it exists.\n\nIn most cases this is because the record existed explicitly in the checklist sources, but some usages are created *de novo* because the exist implicitly in the data.",
              "enum": [
                "SOURCE",
                "DENORMED_CLASSIFICATION",
                "VERBATIM_PARENT",
                "VERBATIM_ACCEPTED",
                "VERBATIM_BASIONYM",
                "PROPARTE",
                "AUTONYM",
                "IMPLICIT_NAME",
                "MISSING_ACCEPTED",
                "BASIONYM_PLACEHOLDER",
                "EX_AUTHOR_SYNONYM",
                "OTHER"
              ]
            },
            "taxonomicStatus": {
              "type": "string",
              "description": "The taxonomic status of the name usage.\n\nCan be null, but for all synonyms with an accepted name usage it is guaranteed to exist.",
              "enum": [
                "ACCEPTED",
                "DOUBTFUL",
                "SYNONYM",
                "HETEROTYPIC_SYNONYM",
                "HOMOTYPIC_SYNONYM",
                "PROPARTE_SYNONYM",
                "MISAPPLIED"
              ]
            },
            "nomenclaturalStatus": {
              "uniqueItems": true,
              "type": "array",
              "description": "The nomenclatural statuses of this name usage.",
              "items": {
                "type": "string",
                "description": "The nomenclatural statuses of this name usage.",
                "enum": [
                  "LEGITIMATE",
                  "VALIDLY_PUBLISHED",
                  "NEW_COMBINATION",
                  "REPLACEMENT",
                  "CONSERVED",
                  "PROTECTED",
                  "CORRECTED",
                  "ORIGINAL_COMBINATION",
                  "NEW_SPECIES",
                  "NEW_GENUS",
                  "ALTERNATIVE",
                  "OBSCURE",
                  "CONSERVED_PROPOSED",
                  "PROVISIONAL",
                  "SUBNUDUM",
                  "REJECTED_PROPOSED",
                  "REJECTED_OUTRIGHT_PROPOSED",
                  "DOUBTFUL",
                  "AMBIGUOUS",
                  "CONFUSED",
                  "FORGOTTEN",
                  "ABORTED",
                  "ORTHOGRAPHIC_VARIANT",
                  "SUPERFLUOUS",
                  "NUDUM",
                  "NULL_NAME",
                  "SUPPRESSED",
                  "REJECTED_OUTRIGHT",
                  "REJECTED",
                  "ILLEGITIMATE",
                  "INVALID",
                  "DENIED"
                ]
              }
            },
            "remarks": {
              "type": "string",
              "description": "Remarks on the name usage."
            },
            "publishedIn": {
              "type": "string",
              "description": "Original publication for this name usage."
            },
            "accordingTo": {
              "type": "string",
              "description": "The taxon concept reference.\n\nThis is usually a reference to some publication or an author and year.\n\nThe Darwin Core `taxonAccordingTo` reference is usually appended to the scientific name to further qualify the concept with “sensu” or “sec.” being used for concatenation; for example “_Acer nigrum_ sec. Gleason Cronquist 1991”.\n\nIn the case of backbone taxa, this refers to the primary checklist in which the name was found."
            },
            "numDescendants": {
              "type": "integer",
              "description": "A total count of all accepted taxonomic elements under this usage.",
              "format": "int32"
            },
            "references": {
              "type": "string",
              "description": "A URI link or reference to the source of the record, the record's “homepage”.",
              "format": "uri"
            },
            "modified": {
              "type": "string",
              "description": "The interpreted dc:modified from the verbatim source data, ideally indicating when a record was last modified in the source.",
              "format": "date-time"
            },
            "deleted": {
              "type": "string",
              "description": "The date this record was deleted.\n\n*Only backbone name usages are soft-deleted.*",
              "format": "date-time"
            },
            "lastCrawled": {
              "type": "string",
              "description": "The date this record was last crawled (downloaded from the source) during Checklistbank indexing.",
              "format": "date-time"
            },
            "lastInterpreted": {
              "type": "string",
              "description": "The date this record was last interpreted during indexing.  This includes matching to the backbone.",
              "format": "date-time"
            },
            "issues": {
              "uniqueItems": true,
              "type": "array",
              "description": "Data quality issues found during Checklistbank interpretation.",
              "items": {
                "type": "string",
                "description": "Data quality issues found during Checklistbank interpretation.",
                "enum": [
                  "PARENT_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_USAGE_ID_INVALID",
                  "ORIGINAL_NAME_USAGE_ID_INVALID",
                  "ACCEPTED_NAME_MISSING",
                  "RANK_INVALID",
                  "NOMENCLATURAL_STATUS_INVALID",
                  "TAXONOMIC_STATUS_INVALID",
                  "SCIENTIFIC_NAME_ASSEMBLED",
                  "CHAINED_SYNOYM",
                  "BASIONYM_AUTHOR_MISMATCH",
                  "TAXONOMIC_STATUS_MISMATCH",
                  "PARENT_CYCLE",
                  "CLASSIFICATION_RANK_ORDER_INVALID",
                  "CLASSIFICATION_NOT_APPLIED",
                  "VERNACULAR_NAME_INVALID",
                  "DESCRIPTION_INVALID",
                  "DISTRIBUTION_INVALID",
                  "SPECIES_PROFILE_INVALID",
                  "MULTIMEDIA_INVALID",
                  "BIB_REFERENCE_INVALID",
                  "ALT_IDENTIFIER_INVALID",
                  "BACKBONE_MATCH_NONE",
                  "BACKBONE_MATCH_FUZZY",
                  "BACKBONE_MATCH_AGGREGATE",
                  "ACCEPTED_NAME_NOT_UNIQUE",
                  "PARENT_NAME_NOT_UNIQUE",
                  "ORIGINAL_NAME_NOT_UNIQUE",
                  "RELATIONSHIP_MISSING",
                  "ORIGINAL_NAME_DERIVED",
                  "CONFLICTING_BASIONYM_COMBINATION",
                  "NO_SPECIES",
                  "NAME_PARENT_MISMATCH",
                  "ORTHOGRAPHIC_VARIANT",
                  "HOMONYM",
                  "PUBLISHED_BEFORE_GENUS",
                  "UNPARSABLE",
                  "PARTIALLY_PARSABLE"
                ]
              }
            },
            "class": {
              "type": "string",
              "description": "Class."
            }
          },
          "description": "Search results."
        },
        "PagingResponseNameUsage": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/NameUsage"
              }
            }
          }
        },
        "PagingResponseSpeciesProfile": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/SpeciesProfile"
              }
            }
          }
        },
        "SpeciesProfile": {
          "type": "object",
          "properties": {
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this species profile belongs.",
              "format": "int32"
            },
            "livingPeriod": {
              "type": "string",
              "description": "The geological time a currently extinct organism is known to have lived."
            },
            "lifeForm": {
              "type": "string",
              "description": "A term describing the growth/lifeform of an organism.\n\nSee [Life Form vocabulary](https://rs.gbif.org/vocabulary/gbif/life_form)."
            },
            "habitat": {
              "type": "string",
              "description": "Comma-separated list of major habitat classifications as defined by the IUCN in which a species is known to exist.\n\nSee [Habitats vocabulary](https://rs.gbif.org/vocabulary/iucn/habitat/)."
            },
            "marine": {
              "type": "boolean",
              "description": "A Boolean flag indicating whether the taxon is a marine organism, i.e. can be found in/above sea water."
            },
            "freshwater": {
              "type": "boolean",
              "description": "Flag indicating whether the taxon is a freshwater organism."
            },
            "terrestrial": {
              "type": "boolean",
              "description": "A Boolean flag indicating the taxon is a terrestrial organism, i.e. occurs on land as opposed to the sea."
            },
            "extinct": {
              "type": "boolean",
              "description": "Flag indicating an extinct organism."
            },
            "hybrid": {
              "type": "boolean",
              "description": "Flag indicating a hybrid organism."
            },
            "ageInDays": {
              "type": "integer",
              "description": "Maximum observed age of an organism given as number of days.",
              "format": "int32"
            },
            "sizeInMillimeter": {
              "type": "integer",
              "description": "Maximum observed size of an organism in millimetres.\n\nCan be either height, length or width, whichever is greater.",
              "format": "int32"
            },
            "massInGram": {
              "type": "integer",
              "description": "Maximum observed weight of an organism in grams.",
              "format": "int32"
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source for the species profile."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this species profile.",
              "format": "int32"
            }
          },
          "description": "Search results."
        },
        "PagingResponseReference": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/Reference"
              }
            }
          }
        },
        "Reference": {
          "required": [
            "citation"
          ],
          "type": "object",
          "properties": {
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this species profile belongs.",
              "format": "int32"
            },
            "citation": {
              "type": "string",
              "description": "A text string referring to an un-parsed bibliographic citation."
            },
            "link": {
              "type": "string",
              "description": "The reference link."
            },
            "doi": {
              "type": "string",
              "description": "The pure DOI for the publication without potential http resolver or URI prefix.",
              "example": "10.1038/ng0609-637"
            },
            "type": {
              "type": "string",
              "description": "Used to assign a bibliographic reference to list of taxonomic or nomenclatural categories."
            },
            "remarks": {
              "type": "string",
              "description": "Annotation of taxon-specific information related to the referenced publication."
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source for the reference."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this reference.",
              "format": "int32"
            },
            "title": {
              "type": "string",
              "description": "Title of book or article.",
              "deprecated": true
            },
            "author": {
              "type": "string",
              "description": "The author or authors of the referenced work.",
              "deprecated": true
            },
            "date": {
              "type": "string",
              "description": "Date of publication.",
              "deprecated": true
            }
          },
          "description": "Search results."
        },
        "NameUsageMetrics": {
          "required": [
            "key"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "description": "The name usage key that uniquely identifies this name usage.",
              "format": "int32"
            },
            "numPhylum": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of phyla that are below this taxon. Typically, this would mean this usage is of something above the “phylum” taxonomic level.",
              "format": "int32"
            },
            "numClass": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of classes that are below this taxon. Typically, this would mean this usage is of something above the “class” taxonomic level.",
              "format": "int32"
            },
            "numOrder": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of orders that are below this taxon. Typically, this would mean this usage is of something above the “order” taxonomic level.",
              "format": "int32"
            },
            "numFamily": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of families that are below this taxon. Typically, this would mean this usage is of something above the “family” taxonomic level.",
              "format": "int32"
            },
            "numGenus": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of genus that are below this taxon. Typically, this would mean this usage is of something above the “genus” taxonomic level.",
              "format": "int32"
            },
            "numSubgenus": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of distinct subgenera that are below this taxon. Typically, this would mean this usage is of something above the “subgenus” taxonomic level.",
              "format": "int32"
            },
            "numSpecies": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of species that are below this taxon. Typically, this would mean this usage is of something above the “species” taxonomic level.",
              "format": "int32"
            },
            "numChildren": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of direct taxonomic elements under this usage. “Direct” means that children should have this usageKey as their parentKey.",
              "format": "int32"
            },
            "numDescendants": {
              "type": "integer",
              "description": "The number of all accepted taxonomic elements under this usage.",
              "format": "int32"
            },
            "numSynonyms": {
              "minimum": 0,
              "type": "integer",
              "description": "Returns the number of related synonyms this usage possses.",
              "format": "int32"
            }
          }
        },
        "NameUsageMediaObject": {
          "required": [
            "identifier",
            "type"
          ],
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "The kind of media object.",
              "enum": [
                "StillImage",
                "MovingImage",
                "Sound",
                "InteractiveResource"
              ]
            },
            "format": {
              "type": "string",
              "description": "The format the image is exposed in."
            },
            "references": {
              "type": "string",
              "description": "An HTML webpage that shows the image or its metadata.",
              "format": "uri"
            },
            "title": {
              "type": "string",
              "description": "The media item title."
            },
            "description": {
              "type": "string",
              "description": "A longer description for this media item."
            },
            "source": {
              "type": "string"
            },
            "audience": {
              "type": "string",
              "description": "A class or description for whom the image is intended or useful."
            },
            "created": {
              "type": "string",
              "description": "The date and time this media item was created.",
              "format": "date-time"
            },
            "creator": {
              "type": "string",
              "description": "The person that created the media item."
            },
            "contributor": {
              "type": "string",
              "description": "Any contributor in addition to the creator that helped in recording the media item."
            },
            "publisher": {
              "type": "string",
              "description": "An entity responsible for making the media item available."
            },
            "license": {
              "type": "string",
              "description": "Licence for this media item."
            },
            "rightsHolder": {
              "type": "string",
              "description": "A person or organization owning or managing rights over the media item."
            },
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this species profile belongs.",
              "format": "int32"
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this media object.",
              "format": "int32"
            },
            "identifier": {
              "type": "string",
              "description": "The public URL that identifies and locates the media item.",
              "format": "uri"
            }
          },
          "description": "Search results."
        },
        "PagingResponseNameUsageMediaObject": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/NameUsageMediaObject"
              }
            }
          }
        },
        "IucnRedListCategory": {
          "type": "object",
          "properties": {
            "category": {
              "type": "string",
              "description": "The taxonomic threat status as given in our https://api.gbif.org/v1/enumeration/basic/ThreatStatus[ThreatStatus enum].",
              "enum": [
                "EXTINCT",
                "EXTINCT_IN_THE_WILD",
                "REGIONALLY_EXTINCT",
                "CRITICALLY_ENDANGERED",
                "ENDANGERED",
                "VULNERABLE",
                "NEAR_THREATENED",
                "LEAST_CONCERN",
                "DATA_DEFICIENT",
                "NOT_APPLICABLE",
                "NOT_EVALUATED"
              ]
            },
            "usageKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this Red List category applies.",
              "format": "int32"
            },
            "scientificName": {
              "type": "string",
              "description": "The scientific name."
            },
            "taxonomicStatus": {
              "type": "string",
              "description": "The taxonomic status of the name.",
              "enum": [
                "ACCEPTED",
                "DOUBTFUL",
                "SYNONYM",
                "HETEROTYPIC_SYNONYM",
                "HOMOTYPIC_SYNONYM",
                "PROPARTE_SYNONYM",
                "MISAPPLIED"
              ]
            },
            "acceptedName": {
              "type": "string",
              "description": "The accepted name, if the name is a synonym."
            },
            "acceptedUsageKey": {
              "type": "integer",
              "description": "The accepted name's usage key, if the name is a synonym.",
              "format": "int32"
            },
            "iucnTaxonID": {
              "type": "string",
              "description": "The original IUCN identifier used for the name usage."
            },
            "code": {
              "type": "string",
              "description": "The code for the taxonomic threat status as given in our https://api.gbif.org/v1/enumeration/basic/ThreatStatus[ThreatStatus enum]."
            }
          }
        },
        "Identifier": {
          "required": [
            "identifier",
            "type"
          ],
          "type": "object",
          "properties": {
            "identifier": {
              "type": "string",
              "description": "Other known identifier used for the same taxon. Can be a URL pointing to a webpage, an XML or RDF document, a DOI UUID or any other identifer."
            },
            "title": {
              "type": "string",
              "description": "The optional title of an identifier, mostly for linking."
            },
            "type": {
              "type": "string",
              "description": "Type of identifier.",
              "enum": [
                "URL",
                "LSID",
                "HANDLER",
                "DOI",
                "UUID",
                "FTP",
                "URI",
                "UNKNOWN",
                "GBIF_PORTAL",
                "GBIF_NODE",
                "GBIF_PARTICIPANT",
                "GRSCICOLL_ID",
                "GRSCICOLL_URI",
                "IH_IRN",
                "ROR",
                "GRID",
                "CITES",
                "SYMBIOTA_UUID"
              ]
            },
            "identifierLink": {
              "type": "string",
              "description": "An HTTP link for an identifier, if a suitable, known resolver exists for the identifier type."
            }
          },
          "description": "Search results."
        },
        "PagingResponseIdentifier": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/Identifier"
              }
            }
          }
        },
        "Distribution": {
          "type": "object",
          "properties": {
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this species profile belongs.",
              "format": "int32"
            },
            "locationId": {
              "type": "string",
              "description": " A code for the named area this distributon record is about."
            },
            "locality": {
              "type": "string",
              "description": "The verbatim name of the area this distribution record is about."
            },
            "country": {
              "type": "string",
              "description": "The country",
              "externalDocs": {
                "description": "API call to retrieve all official values.",
                "url": "https://api.gbif.org/v1/enumeration/country"
              },
              "enum": [
                "AF",
                "AX",
                "AL",
                "DZ",
                "AS",
                "AD",
                "AO",
                "AI",
                "AQ",
                "AG",
                "AR",
                "AM",
                "AW",
                "AU",
                "AT",
                "AZ",
                "BS",
                "BH",
                "BD",
                "BB",
                "BY",
                "BE",
                "BZ",
                "BJ",
                "BM",
                "BT",
                "BO",
                "BQ",
                "BA",
                "BW",
                "BV",
                "BR",
                "IO",
                "BN",
                "BG",
                "BF",
                "BI",
                "KH",
                "CM",
                "CA",
                "CV",
                "KY",
                "CF",
                "TD",
                "CL",
                "CN",
                "CX",
                "CC",
                "CO",
                "KM",
                "CD",
                "CG",
                "CK",
                "CR",
                "CI",
                "HR",
                "CU",
                "CW",
                "CY",
                "CZ",
                "DK",
                "DJ",
                "DM",
                "DO",
                "EC",
                "EG",
                "SV",
                "GQ",
                "ER",
                "EE",
                "ET",
                "FK",
                "FO",
                "FJ",
                "FI",
                "FR",
                "GF",
                "PF",
                "TF",
                "GA",
                "GM",
                "GE",
                "DE",
                "GH",
                "GI",
                "GR",
                "GL",
                "GD",
                "GP",
                "GU",
                "GT",
                "GG",
                "GN",
                "GW",
                "GY",
                "HT",
                "HM",
                "VA",
                "HN",
                "HK",
                "HU",
                "IS",
                "IN",
                "ID",
                "IR",
                "IQ",
                "IE",
                "IM",
                "IL",
                "IT",
                "JM",
                "JP",
                "JE",
                "JO",
                "KZ",
                "KE",
                "KI",
                "KP",
                "KR",
                "KW",
                "KG",
                "LA",
                "LV",
                "LB",
                "LS",
                "LR",
                "LY",
                "LI",
                "LT",
                "LU",
                "MO",
                "MK",
                "MG",
                "MW",
                "MY",
                "MV",
                "ML",
                "MT",
                "MH",
                "MQ",
                "MR",
                "MU",
                "YT",
                "MX",
                "FM",
                "MD",
                "MC",
                "MN",
                "ME",
                "MS",
                "MA",
                "MZ",
                "MM",
                "NA",
                "NR",
                "NP",
                "NL",
                "NC",
                "NZ",
                "NI",
                "NE",
                "NG",
                "NU",
                "NF",
                "MP",
                "NO",
                "OM",
                "PK",
                "PW",
                "PS",
                "PA",
                "PG",
                "PY",
                "PE",
                "PH",
                "PN",
                "PL",
                "PT",
                "PR",
                "QA",
                "RE",
                "RO",
                "RU",
                "RW",
                "BL",
                "SH",
                "KN",
                "LC",
                "MF",
                "PM",
                "VC",
                "WS",
                "SM",
                "ST",
                "SA",
                "SN",
                "RS",
                "SC",
                "SL",
                "SG",
                "SX",
                "SK",
                "SI",
                "SB",
                "SO",
                "ZA",
                "GS",
                "SS",
                "ES",
                "LK",
                "SD",
                "SR",
                "SJ",
                "SZ",
                "SE",
                "CH",
                "SY",
                "TW",
                "TJ",
                "TZ",
                "TH",
                "TL",
                "TG",
                "TK",
                "TO",
                "TT",
                "TN",
                "TR",
                "TM",
                "TC",
                "TV",
                "UG",
                "UA",
                "AE",
                "GB",
                "US",
                "UM",
                "UY",
                "UZ",
                "VU",
                "VE",
                "VN",
                "VG",
                "VI",
                "WF",
                "EH",
                "YE",
                "ZM",
                "ZW",
                "AA",
                "XK",
                "XZ",
                "ZZ"
              ]
            },
            "status": {
              "type": "string",
              "description": "Term describing the occurrence status of the organism in the given area based on how frequent the species occurs.",
              "enum": [
                "PRESENT",
                "COMMON",
                "RARE",
                "IRREGULAR",
                "DOUBTFUL",
                "EXCLUDED",
                "ABSENT"
              ]
            },
            "lifeStage": {
              "type": "string",
              "description": "The distribution information pertains solely to a specific life stage of the taxon.",
              "enum": [
                "ZYGOTE",
                "EMRYO",
                "LARVA",
                "JUVENILE",
                "ADULT",
                "SPOROPHYTE",
                "SPORE",
                "GAMETOPHYTE",
                "GAMETE",
                "PUPA"
              ]
            },
            "temporal": {
              "type": "string",
              "description": "Relevant temporal context for this entire distribution record including all properties, preferably given as a year range or single year on which the distribution record is valid.\n\nFor the same area and taxon there could therefore be several records with different temporal context, e.g. in 5-year intervals for invasive species."
            },
            "threatStatus": {
              "type": "string",
              "description": "Threat status of a species as defined by IUCN.",
              "enum": [
                "EXTINCT",
                "EXTINCT_IN_THE_WILD",
                "REGIONALLY_EXTINCT",
                "CRITICALLY_ENDANGERED",
                "ENDANGERED",
                "VULNERABLE",
                "NEAR_THREATENED",
                "LEAST_CONCERN",
                "DATA_DEFICIENT",
                "NOT_APPLICABLE",
                "NOT_EVALUATED"
              ]
            },
            "establishmentMeans": {
              "type": "string",
              "description": "Term describing whether the organism occurs natively, is introduced or cultivated.",
              "enum": [
                "NATIVE",
                "INTRODUCED",
                "NATURALISED",
                "INVASIVE",
                "MANAGED",
                "UNCERTAIN"
              ]
            },
            "appendixCites": {
              "type": "string",
              "description": "The CITES (Convention on International Trade in Endangered Species of Wild Fauna and Flora) Appendix number under which the taxon is listed.\n\nIt is possible to have different appendix numbers for different areas, but “global” as an area is also valid.",
              "enum": [
                "I",
                "II",
                "III"
              ]
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source for the distribution."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this distribution.",
              "format": "int32"
            },
            "startDayOfYear": {
              "maximum": 366,
              "minimum": 1,
              "type": "integer",
              "description": "Seasonal temporal subcontext within the eventDate context. Useful for migratory species.\n\nThe earliest ordinal day of the year on which the distribution record is valid. Numbering starts with 1 for 1 January and ends with 365 or 366 for 31 December.",
              "format": "int32"
            },
            "endDayOfYear": {
              "maximum": 366,
              "minimum": 1,
              "type": "integer",
              "description": "Seasonal temporal subcontext within the eventDate context. The latest ordinal day of the year on which the distribution record is valid.",
              "format": "int32"
            },
            "remarks": {
              "type": "string",
              "description": "Additional notes on the distribution."
            }
          },
          "description": "Search results."
        },
        "PagingResponseDistribution": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/Distribution"
              }
            }
          }
        },
        "Description": {
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "description": "A unique GBIF identifier for the description.\n\nThis key is used in the table of contents to retrieve the detailed description.",
              "format": "int32"
            },
            "taxonKey": {
              "type": "integer",
              "description": "The name usage “taxon“ key to which this species profile belongs.",
              "format": "int32"
            },
            "type": {
              "type": "string",
              "description": "The type used to categorize paragraphs of a taxon description.\n\nSee the [Description Type vocabulary](http://rs.gbif.org/vocabulary/gbif/descriptionType)."
            },
            "language": {
              "type": "string",
              "description": "ISO 639-1 language code used for the description.",
              "enum": [
                "abk",
                "aar",
                "afr",
                "aka",
                "sqi",
                "amh",
                "ara",
                "arg",
                "hye",
                "asm",
                "ava",
                "ave",
                "aym",
                "aze",
                "bam",
                "bak",
                "eus",
                "bel",
                "ben",
                "bih",
                "bis",
                "bos",
                "bre",
                "bul",
                "mya",
                "cat",
                "cha",
                "che",
                "zho",
                "chu",
                "chv",
                "cor",
                "cos",
                "cre",
                "hrv",
                "ces",
                "dan",
                "div",
                "nld",
                "dzo",
                "eng",
                "epo",
                "est",
                "ewe",
                "fao",
                "fij",
                "fin",
                "fra",
                "fry",
                "ful",
                "glg",
                "lug",
                "kat",
                "deu",
                "ell",
                "kal",
                "grn",
                "guj",
                "hat",
                "hau",
                "heb",
                "her",
                "hin",
                "hmo",
                "hun",
                "isl",
                "ido",
                "ibo",
                "ind",
                "ina",
                "ile",
                "iku",
                "ipk",
                "gle",
                "ita",
                "jpn",
                "jav",
                "kan",
                "kau",
                "kas",
                "kaz",
                "khm",
                "kik",
                "kin",
                "kir",
                "kom",
                "kon",
                "kor",
                "kur",
                "kua",
                "lao",
                "lat",
                "lav",
                "lim",
                "lin",
                "lit",
                "lub",
                "ltz",
                "mkd",
                "mlg",
                "msa",
                "mal",
                "mlt",
                "glv",
                "mri",
                "mar",
                "mah",
                "mol",
                "mon",
                "nau",
                "nav",
                "ndo",
                "nep",
                "nde",
                "sme",
                "nob",
                "nno",
                "nor",
                "nya",
                "oci",
                "oji",
                "ori",
                "orm",
                "oss",
                "pli",
                "pan",
                "fas",
                "pol",
                "por",
                "pus",
                "que",
                "roh",
                "ron",
                "run",
                "rus",
                "smo",
                "sag",
                "san",
                "srd",
                "gla",
                "srp",
                "sna",
                "iii",
                "snd",
                "sin",
                "slk",
                "slv",
                "som",
                "nbl",
                "sot",
                "spa",
                "sun",
                "swa",
                "ssw",
                "swe",
                "tgl",
                "tah",
                "tgk",
                "tam",
                "tat",
                "tel",
                "tha",
                "bod",
                "tir",
                "ton",
                "tso",
                "tsn",
                "tur",
                "tuk",
                "twi",
                "uig",
                "ukr",
                "urd",
                "uzb",
                "ven",
                "vie",
                "vol",
                "wln",
                "cym",
                "wol",
                "xho",
                "yid",
                "yor",
                "zha",
                "zul",
                ""
              ]
            },
            "description": {
              "type": "string",
              "description": "Any descriptive, free text matching the category given as dc:type.\n\nThe text should be either plain text or HTML."
            },
            "source": {
              "type": "string",
              "description": "Bibliographic citation referencing a source for the description."
            },
            "sourceTaxonKey": {
              "type": "integer",
              "description": "The name usage key of the taxon in the checklist including this description.",
              "format": "int32"
            },
            "creator": {
              "type": "string",
              "description": "The author(s) of the textual information provided for a description."
            },
            "contributor": {
              "type": "string",
              "description": "An entity responsible for making contributions to the textual information provided for a description."
            },
            "license": {
              "type": "string",
              "description": "Official permission to do something with the resource."
            }
          },
          "description": "Search results."
        },
        "PagingResponseDescription": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/Description"
              }
            }
          }
        },
        "UsageCount": {
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "format": "int32"
            },
            "name": {
              "type": "string"
            },
            "rank": {
              "type": "string",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "size": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "NameUsageSuggestResult": {
          "required": [
            "higherClassificationMap"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "format": "int32"
            },
            "nameKey": {
              "type": "integer",
              "format": "int32"
            },
            "kingdom": {
              "type": "string"
            },
            "phylum": {
              "type": "string"
            },
            "order": {
              "type": "string"
            },
            "family": {
              "type": "string"
            },
            "genus": {
              "type": "string"
            },
            "subgenus": {
              "type": "string"
            },
            "species": {
              "type": "string"
            },
            "kingdomKey": {
              "type": "integer",
              "format": "int32"
            },
            "phylumKey": {
              "type": "integer",
              "format": "int32"
            },
            "classKey": {
              "type": "integer",
              "format": "int32"
            },
            "orderKey": {
              "type": "integer",
              "format": "int32"
            },
            "familyKey": {
              "type": "integer",
              "format": "int32"
            },
            "genusKey": {
              "type": "integer",
              "format": "int32"
            },
            "subgenusKey": {
              "type": "integer",
              "format": "int32"
            },
            "speciesKey": {
              "type": "integer",
              "format": "int32"
            },
            "parent": {
              "type": "string"
            },
            "parentKey": {
              "type": "integer",
              "format": "int32"
            },
            "nubKey": {
              "type": "integer",
              "format": "int32"
            },
            "scientificName": {
              "type": "string"
            },
            "canonicalName": {
              "type": "string"
            },
            "rank": {
              "type": "string",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "DOUBTFUL",
                "SYNONYM",
                "HETEROTYPIC_SYNONYM",
                "HOMOTYPIC_SYNONYM",
                "PROPARTE_SYNONYM",
                "MISAPPLIED"
              ]
            },
            "higherClassificationMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "synonym": {
              "type": "boolean"
            },
            "class": {
              "type": "string"
            }
          }
        },
        "Count": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "count": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "FacetNameUsageSearchParameter": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "enum": [
                "DATASET_KEY",
                "CONSTITUENT_KEY",
                "RANK",
                "HIGHERTAXON_KEY",
                "STATUS",
                "IS_EXTINCT",
                "HABITAT",
                "THREAT",
                "NOMENCLATURAL_STATUS",
                "NAME_TYPE",
                "ISSUE",
                "ORIGIN"
              ]
            },
            "counts": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Count"
              }
            }
          },
          "description": "The resulting facets of a search operation.  The list can be empty if no facets were requested.\n\nIf there are no values for a facet, it will not be included in the list, i.e.: a facet should have at least 1 occurrence."
        },
        "NameUsageSearchResult": {
          "required": [
            "descriptions",
            "higherClassificationMap",
            "vernacularNames"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "format": "int32"
            },
            "nameKey": {
              "type": "integer",
              "format": "int32"
            },
            "datasetKey": {
              "type": "string",
              "format": "uuid"
            },
            "constituentKey": {
              "type": "string",
              "format": "uuid"
            },
            "nubKey": {
              "type": "integer",
              "format": "int32"
            },
            "parentKey": {
              "type": "integer",
              "format": "int32"
            },
            "parent": {
              "type": "string"
            },
            "acceptedKey": {
              "type": "integer",
              "format": "int32"
            },
            "accepted": {
              "type": "string"
            },
            "basionymKey": {
              "type": "integer",
              "format": "int32"
            },
            "basionym": {
              "type": "string"
            },
            "kingdom": {
              "type": "string"
            },
            "phylum": {
              "type": "string"
            },
            "order": {
              "type": "string"
            },
            "family": {
              "type": "string"
            },
            "genus": {
              "type": "string"
            },
            "subgenus": {
              "type": "string"
            },
            "species": {
              "type": "string"
            },
            "kingdomKey": {
              "type": "integer",
              "format": "int32"
            },
            "phylumKey": {
              "type": "integer",
              "format": "int32"
            },
            "classKey": {
              "type": "integer",
              "format": "int32"
            },
            "orderKey": {
              "type": "integer",
              "format": "int32"
            },
            "familyKey": {
              "type": "integer",
              "format": "int32"
            },
            "genusKey": {
              "type": "integer",
              "format": "int32"
            },
            "subgenusKey": {
              "type": "integer",
              "format": "int32"
            },
            "speciesKey": {
              "type": "integer",
              "format": "int32"
            },
            "scientificName": {
              "type": "string"
            },
            "canonicalName": {
              "type": "string"
            },
            "authorship": {
              "type": "string"
            },
            "publishedIn": {
              "type": "string"
            },
            "accordingTo": {
              "type": "string"
            },
            "nameType": {
              "type": "string",
              "enum": [
                "SCIENTIFIC",
                "VIRUS",
                "HYBRID",
                "INFORMAL",
                "CULTIVAR",
                "CANDIDATUS",
                "OTU",
                "DOUBTFUL",
                "PLACEHOLDER",
                "NO_NAME",
                "BLACKLISTED"
              ]
            },
            "taxonomicStatus": {
              "type": "string",
              "enum": [
                "ACCEPTED",
                "DOUBTFUL",
                "SYNONYM",
                "HETEROTYPIC_SYNONYM",
                "HOMOTYPIC_SYNONYM",
                "PROPARTE_SYNONYM",
                "MISAPPLIED"
              ]
            },
            "rank": {
              "type": "string",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "origin": {
              "type": "string",
              "enum": [
                "SOURCE",
                "DENORMED_CLASSIFICATION",
                "VERBATIM_PARENT",
                "VERBATIM_ACCEPTED",
                "VERBATIM_BASIONYM",
                "PROPARTE",
                "AUTONYM",
                "IMPLICIT_NAME",
                "MISSING_ACCEPTED",
                "BASIONYM_PLACEHOLDER",
                "EX_AUTHOR_SYNONYM",
                "OTHER"
              ]
            },
            "numDescendants": {
              "type": "integer",
              "format": "int32"
            },
            "numOccurrences": {
              "type": "integer",
              "format": "int64"
            },
            "taxonID": {
              "type": "string"
            },
            "extinct": {
              "type": "boolean"
            },
            "habitats": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "MARINE",
                  "FRESHWATER",
                  "TERRESTRIAL"
                ]
              }
            },
            "nomenclaturalStatus": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "LEGITIMATE",
                  "VALIDLY_PUBLISHED",
                  "NEW_COMBINATION",
                  "REPLACEMENT",
                  "CONSERVED",
                  "PROTECTED",
                  "CORRECTED",
                  "ORIGINAL_COMBINATION",
                  "NEW_SPECIES",
                  "NEW_GENUS",
                  "ALTERNATIVE",
                  "OBSCURE",
                  "CONSERVED_PROPOSED",
                  "PROVISIONAL",
                  "SUBNUDUM",
                  "REJECTED_PROPOSED",
                  "REJECTED_OUTRIGHT_PROPOSED",
                  "DOUBTFUL",
                  "AMBIGUOUS",
                  "CONFUSED",
                  "FORGOTTEN",
                  "ABORTED",
                  "ORTHOGRAPHIC_VARIANT",
                  "SUPERFLUOUS",
                  "NUDUM",
                  "NULL_NAME",
                  "SUPPRESSED",
                  "REJECTED_OUTRIGHT",
                  "REJECTED",
                  "ILLEGITIMATE",
                  "INVALID",
                  "DENIED"
                ]
              }
            },
            "threatStatuses": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "EXTINCT",
                  "EXTINCT_IN_THE_WILD",
                  "REGIONALLY_EXTINCT",
                  "CRITICALLY_ENDANGERED",
                  "ENDANGERED",
                  "VULNERABLE",
                  "NEAR_THREATENED",
                  "LEAST_CONCERN",
                  "DATA_DEFICIENT",
                  "NOT_APPLICABLE",
                  "NOT_EVALUATED"
                ]
              }
            },
            "descriptions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Description"
              }
            },
            "vernacularNames": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/VernacularName"
              }
            },
            "higherClassificationMap": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "synonym": {
              "type": "boolean"
            },
            "class": {
              "type": "string"
            }
          },
          "description": "Search results."
        },
        "SearchResponseNameUsageSearchResultNameUsageSearchParameter": {
          "type": "object",
          "properties": {
            "offset": {
              "minimum": 0,
              "type": "integer",
              "description": "The offset of the results within all the search results.\n\nSubsequent pages can be retrieved by using `offset + count` as the new offset.",
              "format": "int64"
            },
            "limit": {
              "minimum": 0,
              "type": "integer",
              "description": "The limit used.  Note the limit returned may be lower than the limit requested.",
              "format": "int32"
            },
            "endOfRecords": {
              "type": "boolean",
              "description": "True if this page of search results is the final page."
            },
            "count": {
              "type": "integer",
              "description": "The total number of records returned by the search.",
              "format": "int64"
            },
            "results": {
              "type": "array",
              "description": "Search results.",
              "items": {
                "$ref": "#/components/schemas/NameUsageSearchResult"
              }
            },
            "facets": {
              "type": "array",
              "description": "The resulting facets of a search operation.  The list can be empty if no facets were requested.\n\nIf there are no values for a facet, it will not be included in the list, i.e.: a facet should have at least 1 occurrence.",
              "items": {
                "$ref": "#/components/schemas/FacetNameUsageSearchParameter"
              }
            }
          }
        },
        "Pageable": {
          "type": "object",
          "properties": {
            "limit": {
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "offset": {
              "minimum": 0,
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "DatasetMetrics": {
          "required": [
            "countByConstituent",
            "countByIssue",
            "countByKingdom",
            "countByOrigin",
            "countByRank",
            "countExtRecordsByExtension",
            "countNamesByLanguage",
            "created",
            "datasetKey",
            "downloaded"
          ],
          "type": "object",
          "properties": {
            "key": {
              "type": "integer",
              "format": "int32"
            },
            "datasetKey": {
              "type": "string",
              "description": "Dataset key.",
              "format": "uuid"
            },
            "usagesCount": {
              "minimum": 0,
              "type": "integer",
              "description": "Total number of name usage records in Checklistbank.",
              "format": "int32"
            },
            "synonymsCount": {
              "minimum": 0,
              "type": "integer",
              "description": "Number of records with a taxonomic status of synonym.",
              "format": "int32"
            },
            "distinctNamesCount": {
              "minimum": 0,
              "type": "integer",
              "description": "Number of distinct, canonical name strings.",
              "format": "int32"
            },
            "nubMatchingCount": {
              "minimum": 0,
              "type": "integer",
              "description": "Number of records matching a name in the GBIF Backbone Taxonomy.",
              "format": "int32"
            },
            "colMatchingCount": {
              "minimum": 0,
              "type": "integer",
              "description": "Number of records matching a name in the Catalogue of Life.",
              "format": "int32"
            },
            "nubCoveragePct": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "description": "Percentage of distinct names that match a name in the GBIF backbone taxonomy.",
              "format": "int32"
            },
            "colCoveragePct": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "description": "Percentage of distinct names that match a name in the Catalogue of Life.",
              "format": "int32"
            },
            "countByConstituent": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Count of names in each constituent dataset.",
                "format": "int32"
              },
              "description": "Count of names in each constituent dataset."
            },
            "countByKingdom": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Number of names in each kingdom.",
                "format": "int32"
              },
              "description": "Number of names in each kingdom."
            },
            "countByRank": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Number of names at each taxonomic rank.",
                "format": "int32"
              },
              "description": "Number of names at each taxonomic rank."
            },
            "countNamesByLanguage": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Number of vernacular names by language.",
                "format": "int32"
              },
              "description": "Number of vernacular names by language."
            },
            "countExtRecordsByExtension": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Number of names having extension data.",
                "format": "int32"
              },
              "description": "Number of names having extension data."
            },
            "countByOrigin": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Total name usages by origin.",
                "format": "int32"
              },
              "description": "Total name usages by origin."
            },
            "countByIssue": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "description": "Total name usage counts by their interpretation issue.",
                "format": "int32"
              },
              "description": "Total name usage counts by their interpretation issue."
            },
            "otherCount": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int32"
              }
            },
            "created": {
              "type": "string",
              "description": "Date this metric was generated. Roughly equivalent with date of indexing.",
              "format": "date-time"
            },
            "downloaded": {
              "type": "string",
              "description": "Date new dataset data was downloaded/harvested last time.",
              "format": "date-time"
            }
          }
        },
        "NameUsageMatch": {
          "type": "object",
          "properties": {
            "usageKey": {
              "type": "integer",
              "description": "The name usage key of the name usage that has been matched.",
              "format": "int32"
            },
            "acceptedUsageKey": {
              "type": "integer",
              "description": "The key of the accepted name usage in case the matched usage was a synonym.",
              "format": "int32"
            },
            "scientificName": {
              "type": "string",
              "description": "The scientific name of the matched name usage."
            },
            "canonicalName": {
              "type": "string"
            },
            "rank": {
              "type": "string",
              "description": "The rank of the matching usage.",
              "externalDocs": {
                "description": "Darwin Core definition",
                "url": "https://rs.tdwg.org/dwc/terms/taxonRank"
              },
              "enum": [
                "DOMAIN",
                "SUPERKINGDOM",
                "KINGDOM",
                "SUBKINGDOM",
                "INFRAKINGDOM",
                "SUPERPHYLUM",
                "PHYLUM",
                "SUBPHYLUM",
                "INFRAPHYLUM",
                "SUPERCLASS",
                "CLASS",
                "SUBCLASS",
                "INFRACLASS",
                "PARVCLASS",
                "SUPERLEGION",
                "LEGION",
                "SUBLEGION",
                "INFRALEGION",
                "SUPERCOHORT",
                "COHORT",
                "SUBCOHORT",
                "INFRACOHORT",
                "MAGNORDER",
                "SUPERORDER",
                "GRANDORDER",
                "ORDER",
                "SUBORDER",
                "INFRAORDER",
                "PARVORDER",
                "SUPERFAMILY",
                "FAMILY",
                "SUBFAMILY",
                "INFRAFAMILY",
                "SUPERTRIBE",
                "TRIBE",
                "SUBTRIBE",
                "INFRATRIBE",
                "SUPRAGENERIC_NAME",
                "GENUS",
                "SUBGENUS",
                "INFRAGENUS",
                "SECTION",
                "SUBSECTION",
                "SERIES",
                "SUBSERIES",
                "INFRAGENERIC_NAME",
                "SPECIES_AGGREGATE",
                "SPECIES",
                "INFRASPECIFIC_NAME",
                "GREX",
                "SUBSPECIES",
                "CULTIVAR_GROUP",
                "CONVARIETY",
                "INFRASUBSPECIFIC_NAME",
                "PROLES",
                "RACE",
                "NATIO",
                "ABERRATION",
                "MORPH",
                "VARIETY",
                "SUBVARIETY",
                "FORM",
                "SUBFORM",
                "PATHOVAR",
                "BIOVAR",
                "CHEMOVAR",
                "MORPHOVAR",
                "PHAGOVAR",
                "SEROVAR",
                "CHEMOFORM",
                "FORMA_SPECIALIS",
                "CULTIVAR",
                "STRAIN",
                "OTHER",
                "UNRANKED"
              ]
            },
            "status": {
              "type": "string",
              "description": "The taxonomic status of the backbone usage.",
              "enum": [
                "ACCEPTED",
                "DOUBTFUL",
                "SYNONYM",
                "HETEROTYPIC_SYNONYM",
                "HOMOTYPIC_SYNONYM",
                "PROPARTE_SYNONYM",
                "MISAPPLIED"
              ]
            },
            "confidence": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "description": "The confidence that the lookup was correct.\n\nA value between 0 and 100 with higher values being better matches.",
              "format": "int32"
            },
            "note": {
              "type": "string"
            },
            "matchType": {
              "type": "string",
              "description": "The type of match for this result.",
              "enum": [
                "EXACT",
                "FUZZY",
                "HIGHERRANK",
                "AGGREGATE",
                "NONE"
              ]
            },
            "alternatives": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NameUsageMatch"
              }
            },
            "kingdom": {
              "type": "string",
              "description": "Matched name's kingdom."
            },
            "phylum": {
              "type": "string",
              "description": "Matched name's phylum."
            },
            "order": {
              "type": "string",
              "description": "Matched name's order."
            },
            "family": {
              "type": "string",
              "description": "Matched name's family."
            },
            "genus": {
              "type": "string",
              "description": "Matched name's genus."
            },
            "subgenus": {
              "type": "string",
              "description": "Matched name's subgenus."
            },
            "species": {
              "type": "string",
              "description": "Matched name's species."
            },
            "kingdomKey": {
              "type": "integer",
              "description": "Usage key of the kingdom of the matched name.",
              "format": "int32"
            },
            "phylumKey": {
              "type": "integer",
              "description": "Usage key of the phylum of the matched name.",
              "format": "int32"
            },
            "classKey": {
              "type": "integer",
              "description": "Usage key of the class of the matched name.",
              "format": "int32"
            },
            "orderKey": {
              "type": "integer",
              "description": "Usage key of the order of the matched name.",
              "format": "int32"
            },
            "familyKey": {
              "type": "integer",
              "description": "Usage key of the family of the matched name.",
              "format": "int32"
            },
            "genusKey": {
              "type": "integer",
              "description": "Usage key of the genus of the matched name.",
              "format": "int32"
            },
            "subgenusKey": {
              "type": "integer",
              "description": "Usage key of the subgenus of the matched name.",
              "format": "int32"
            },
            "speciesKey": {
              "type": "integer",
              "description": "Usage key of the species of the matched name.",
              "format": "int32"
            },
            "synonym": {
              "type": "boolean",
              "description": "True if the match name is a synonym."
            },
            "class": {
              "type": "string",
              "description": "Matched name's class."
            }
          }
        }
      }
    }
  }